Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to interrupt.o(i.IntMasterEnable) for IntMasterEnable
    main.o(.text.main) refers to drivers.o(.text.initSwitches) for initSwitches
    main.o(.text.main) refers to drivers.o(.text.initDoorLockLed) for initDoorLockLed
    main.o(.text.main) refers to drivers.o(.text.initADC) for initADC
    main.o(.text.main) refers to drivers.o(.text.initUltrasonic) for initUltrasonic
    main.o(.text.main) refers to lcd.o(.text.initLCD) for initLCD
    main.o(.text.main) refers to drivers.o(.text.initBuzzer) for initBuzzer
    main.o(.text.main) refers to drivers.o(.text.initRGB) for initRGB
    main.o(.text.main) refers to safety_tasks.o(.text.createSafetyTasks) for createSafetyTasks
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.setupHardware) refers to drivers.o(.text.initSwitches) for initSwitches
    main.o(.text.setupHardware) refers to drivers.o(.text.initDoorLockLed) for initDoorLockLed
    main.o(.text.setupHardware) refers to drivers.o(.text.initADC) for initADC
    main.o(.text.setupHardware) refers to drivers.o(.text.initUltrasonic) for initUltrasonic
    main.o(.text.setupHardware) refers to lcd.o(.text.initLCD) for initLCD
    main.o(.text.setupHardware) refers to drivers.o(.text.initBuzzer) for initBuzzer
    main.o(.text.setupHardware) refers to drivers.o(.text.initRGB) for initRGB
    main.o(.ARM.exidx.text.setupHardware) refers to main.o(.text.setupHardware) for [Anonymous Symbol]
    safety_tasks.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.text.createSafetyTasks) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.text.createSafetyTasks) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.text.createSafetyTasks) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.text.createSafetyTasks) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.text.createSafetyTasks) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.text.createSafetyTasks) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.text.createSafetyTasks) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    safety_tasks.o(.text.createSafetyTasks) refers to safety_tasks.o(.bss.lcdMutex) for lcdMutex
    safety_tasks.o(.text.createSafetyTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    safety_tasks.o(.text.createSafetyTasks) refers to safety_tasks.o(.bss.speedQueue) for speedQueue
    safety_tasks.o(.text.createSafetyTasks) refers to safety_tasks.o(.bss.distanceQueue) for distanceQueue
    safety_tasks.o(.text.createSafetyTasks) refers to safety_tasks.o(.text.doorTask) for doorTask
    safety_tasks.o(.text.createSafetyTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    safety_tasks.o(.text.createSafetyTasks) refers to safety_tasks.o(.text.rearAssistTask) for rearAssistTask
    safety_tasks.o(.text.createSafetyTasks) refers to safety_tasks.o(.text.lcdUpdateTask) for lcdUpdateTask
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.ARM.exidx.text.createSafetyTasks) refers to safety_tasks.o(.text.createSafetyTasks) for [Anonymous Symbol]
    safety_tasks.o(.text.doorTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.text.doorTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.text.doorTask) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.text.doorTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.text.doorTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.text.doorTask) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.text.doorTask) refers to safety_tasks.o(.bss.speedQueue) for speedQueue
    safety_tasks.o(.text.doorTask) refers to safety_tasks.o(.bss.doorLocked) for doorLocked
    safety_tasks.o(.text.doorTask) refers to safety_tasks.o(.bss.doorTask.wasHigh) for doorTask.wasHigh
    safety_tasks.o(.text.doorTask) refers to safety_tasks.o(.bss.doorOpenedBuzzer) for doorOpenedBuzzer
    safety_tasks.o(.text.doorTask) refers to safety_tasks.o(.bss.distanceBuzzer) for distanceBuzzer
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.setOffBuzzer) for setOffBuzzer
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.unlockDoors) for unlockDoors
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.setDoorLockLed) for setDoorLockLed
    safety_tasks.o(.text.doorTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.isIgnitionOn) for isIgnitionOn
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.readSpeedADC) for readSpeedADC
    safety_tasks.o(.text.doorTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.isGearDrive) for isGearDrive
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.isGearReverse) for isGearReverse
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.isDriverDoorOpen) for isDriverDoorOpen
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.lockDoors) for lockDoors
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.isManualLockOn) for isManualLockOn
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.isManualUnlockOn) for isManualUnlockOn
    safety_tasks.o(.text.doorTask) refers to drivers.o(.text.setOnBuzzer) for setOnBuzzer
    safety_tasks.o(.text.doorTask) refers to safety_tasks.o(.bss.lcdMutex) for lcdMutex
    safety_tasks.o(.text.doorTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    safety_tasks.o(.text.doorTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    safety_tasks.o(.text.doorTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    safety_tasks.o(.ARM.exidx.text.doorTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.ARM.exidx.text.doorTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.ARM.exidx.text.doorTask) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.ARM.exidx.text.doorTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.ARM.exidx.text.doorTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.ARM.exidx.text.doorTask) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.ARM.exidx.text.doorTask) refers to safety_tasks.o(.text.doorTask) for [Anonymous Symbol]
    safety_tasks.o(.text.rearAssistTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.text.rearAssistTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.text.rearAssistTask) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.text.rearAssistTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.text.rearAssistTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.text.rearAssistTask) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.text.rearAssistTask) refers to safety_tasks.o(.bss.distanceQueue) for distanceQueue
    safety_tasks.o(.text.rearAssistTask) refers to safety_tasks.o(.bss.doorOpenedBuzzer) for doorOpenedBuzzer
    safety_tasks.o(.text.rearAssistTask) refers to safety_tasks.o(.bss.distanceBuzzer) for distanceBuzzer
    safety_tasks.o(.text.rearAssistTask) refers to drivers.o(.text.setOffBuzzer) for setOffBuzzer
    safety_tasks.o(.text.rearAssistTask) refers to drivers.o(.text.setRGBColor) for setRGBColor
    safety_tasks.o(.text.rearAssistTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    safety_tasks.o(.text.rearAssistTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    safety_tasks.o(.text.rearAssistTask) refers to drivers.o(.text.isIgnitionOn) for isIgnitionOn
    safety_tasks.o(.text.rearAssistTask) refers to drivers.o(.text.isGearReverse) for isGearReverse
    safety_tasks.o(.text.rearAssistTask) refers to drivers.o(.text.ultrasonic_get_distance) for ultrasonic_get_distance
    safety_tasks.o(.text.rearAssistTask) refers to drivers.o(.text.setBuzzerFrequency) for setBuzzerFrequency
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.ARM.exidx.text.rearAssistTask) refers to safety_tasks.o(.text.rearAssistTask) for [Anonymous Symbol]
    safety_tasks.o(.text.lcdUpdateTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.text.lcdUpdateTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.text.lcdUpdateTask) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.text.lcdUpdateTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.text.lcdUpdateTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.text.lcdUpdateTask) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.lcdUpdateTask.wasOn) for lcdUpdateTask.wasOn
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.lcdMutex) for lcdMutex
    safety_tasks.o(.text.lcdUpdateTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    safety_tasks.o(.text.lcdUpdateTask) refers to drivers.o(.text.isIgnitionOn) for isIgnitionOn
    safety_tasks.o(.text.lcdUpdateTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    safety_tasks.o(.text.lcdUpdateTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    safety_tasks.o(.text.lcdUpdateTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    safety_tasks.o(.text.lcdUpdateTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    safety_tasks.o(.text.lcdUpdateTask) refers to drivers.o(.text.delay_ms) for delay_ms
    safety_tasks.o(.text.lcdUpdateTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.doorLocked) for doorLocked
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.data.lcdUpdateTask.lastGear) for lcdUpdateTask.lastGear
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.lcdUpdateTask.lastLock) for lcdUpdateTask.lastLock
    safety_tasks.o(.text.lcdUpdateTask) refers to drivers.o(.text.isGearDrive) for isGearDrive
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) for lcdUpdateTask.doorWasOpen
    safety_tasks.o(.text.lcdUpdateTask) refers to drivers.o(.text.isGearReverse) for isGearReverse
    safety_tasks.o(.text.lcdUpdateTask) refers to drivers.o(.text.isDriverDoorOpen) for isDriverDoorOpen
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.speedQueue) for speedQueue
    safety_tasks.o(.text.lcdUpdateTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.bss.distanceQueue) for distanceQueue
    safety_tasks.o(.text.lcdUpdateTask) refers to safety_tasks.o(.rodata.str1.1) for .L.str.5
    safety_tasks.o(.text.lcdUpdateTask) refers to noretval__2sprintf.o(.text) for __2sprintf
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.ARM.exidx.text.lcdUpdateTask) refers to safety_tasks.o(.text.lcdUpdateTask) for [Anonymous Symbol]
    safety_tasks.o(.bss.doorLocked) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.doorLocked) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.doorLocked) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.doorLocked) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.doorLocked) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.doorLocked) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.doorOpenedBuzzer) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.doorOpenedBuzzer) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.doorOpenedBuzzer) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.doorOpenedBuzzer) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.doorOpenedBuzzer) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.doorOpenedBuzzer) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.distanceBuzzer) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.distanceBuzzer) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.distanceBuzzer) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.distanceBuzzer) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.distanceBuzzer) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.distanceBuzzer) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.lcdMutex) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.lcdMutex) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.lcdMutex) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.lcdMutex) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.lcdMutex) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.lcdMutex) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.speedQueue) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.speedQueue) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.speedQueue) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.speedQueue) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.speedQueue) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.speedQueue) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.distanceQueue) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.distanceQueue) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.distanceQueue) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.distanceQueue) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.distanceQueue) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.distanceQueue) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.doorTask.wasHigh) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.doorTask.wasHigh) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.doorTask.wasHigh) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.doorTask.wasHigh) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.doorTask.wasHigh) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.doorTask.wasHigh) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.lcdUpdateTask.wasOn) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.lcdUpdateTask.wasOn) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.lcdUpdateTask.wasOn) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.lcdUpdateTask.wasOn) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.lcdUpdateTask.wasOn) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.lcdUpdateTask.wasOn) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.data.lcdUpdateTask.lastGear) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.data.lcdUpdateTask.lastGear) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.data.lcdUpdateTask.lastGear) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.data.lcdUpdateTask.lastGear) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.data.lcdUpdateTask.lastGear) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.data.lcdUpdateTask.lastGear) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.lcdUpdateTask.lastLock) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.lcdUpdateTask.lastLock) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.lcdUpdateTask.lastLock) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.lcdUpdateTask.lastLock) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.lcdUpdateTask.lastLock) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.lcdUpdateTask.lastLock) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen) refers (Special) to _printf_str.o(.text) for _printf_str
    safety_tasks.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    safety_tasks.o(.rodata.str1.1) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    safety_tasks.o(.rodata.str1.1) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    safety_tasks.o(.rodata.str1.1) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    safety_tasks.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    safety_tasks.o(.rodata.str1.1) refers (Special) to _printf_str.o(.text) for _printf_str
    lcd.o(.text.initLCD) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    lcd.o(.text.initLCD) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    lcd.o(.text.initLCD) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    lcd.o(.text.initLCD) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.initLCD) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    lcd.o(.text.initLCD) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.initLCD) refers to lcd.o(.text.LCD_SendCommand) for LCD_SendCommand
    lcd.o(.ARM.exidx.text.initLCD) refers to lcd.o(.text.initLCD) for [Anonymous Symbol]
    lcd.o(.text.LCD_SendCommand) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_SendCommand) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    lcd.o(.text.LCD_SendCommand) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_SendCommand) refers to lcd.o(.text.LCD_SendCommand) for [Anonymous Symbol]
    lcd.o(.text.LCD_Print) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    lcd.o(.text.LCD_Print) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    lcd.o(.text.LCD_Print) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.text.LCD_Print) refers to strlen.o(.text) for strlen
    lcd.o(.ARM.exidx.text.LCD_Print) refers to lcd.o(.text.LCD_Print) for [Anonymous Symbol]
    lcd.o(.text.LCD_SetCursor) refers to lcd.o(.text.LCD_SendCommand) for LCD_SendCommand
    lcd.o(.ARM.exidx.text.LCD_SetCursor) refers to lcd.o(.text.LCD_SetCursor) for [Anonymous Symbol]
    lcd.o(.text.LCD_Clear) refers to lcd.o(.text.LCD_SendCommand) for LCD_SendCommand
    lcd.o(.text.LCD_Clear) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    lcd.o(.text.LCD_Clear) refers to sysctl.o(.emb_text) for SysCtlDelay
    lcd.o(.ARM.exidx.text.LCD_Clear) refers to lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    drivers.o(.text.debounceDelay) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    drivers.o(.text.debounceDelay) refers to sysctl.o(.emb_text) for SysCtlDelay
    drivers.o(.ARM.exidx.text.debounceDelay) refers to drivers.o(.text.debounceDelay) for [Anonymous Symbol]
    drivers.o(.ARM.exidx.text.delay_ms) refers to drivers.o(.text.delay_ms) for [Anonymous Symbol]
    drivers.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    drivers.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    drivers.o(.text.GPIOA_Handler) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    drivers.o(.text.GPIOA_Handler) refers to sysctl.o(.emb_text) for SysCtlDelay
    drivers.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    drivers.o(.text.GPIOA_Handler) refers to drivers.o(.bss.driverDoorState) for driverDoorState
    drivers.o(.text.GPIOA_Handler) refers to drivers.o(.bss.gearState) for gearState
    drivers.o(.text.GPIOA_Handler) refers to drivers.o(.bss.manualLockState) for manualLockState
    drivers.o(.text.GPIOA_Handler) refers to drivers.o(.bss.manualUnlockState) for manualUnlockState
    drivers.o(.text.GPIOA_Handler) refers to drivers.o(.bss.ignitionState) for ignitionState
    drivers.o(.ARM.exidx.text.GPIOA_Handler) refers to drivers.o(.text.GPIOA_Handler) for [Anonymous Symbol]
    drivers.o(.text.initSwitches) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initSwitches) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOIntDisable) for GPIOIntDisable
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    drivers.o(.text.initSwitches) refers to drivers.o(.text.GPIOA_Handler) for GPIOA_Handler
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOIntRegister) for GPIOIntRegister
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOIntTypeSet) for GPIOIntTypeSet
    drivers.o(.text.initSwitches) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    drivers.o(.ARM.exidx.text.initSwitches) refers to drivers.o(.text.initSwitches) for [Anonymous Symbol]
    drivers.o(.text.initADC) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initADC) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initADC) refers to gpio.o(i.GPIOPinTypeADC) for GPIOPinTypeADC
    drivers.o(.text.initADC) refers to adc.o(i.ADCSequenceConfigure) for ADCSequenceConfigure
    drivers.o(.text.initADC) refers to adc.o(i.ADCSequenceStepConfigure) for ADCSequenceStepConfigure
    drivers.o(.text.initADC) refers to adc.o(i.ADCSequenceEnable) for ADCSequenceEnable
    drivers.o(.text.initADC) refers to adc.o(i.ADCIntClear) for ADCIntClear
    drivers.o(.ARM.exidx.text.initADC) refers to drivers.o(.text.initADC) for [Anonymous Symbol]
    drivers.o(.text.readSpeedADC) refers to adc.o(i.ADCProcessorTrigger) for ADCProcessorTrigger
    drivers.o(.text.readSpeedADC) refers to adc.o(i.ADCIntStatus) for ADCIntStatus
    drivers.o(.text.readSpeedADC) refers to adc.o(i.ADCIntClear) for ADCIntClear
    drivers.o(.text.readSpeedADC) refers to adc.o(i.ADCSequenceDataGet) for ADCSequenceDataGet
    drivers.o(.ARM.exidx.text.readSpeedADC) refers to drivers.o(.text.readSpeedADC) for [Anonymous Symbol]
    drivers.o(.text.initTimer0) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initTimer0) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initTimer0) refers to timer.o(i.TimerDisable) for TimerDisable
    drivers.o(.text.initTimer0) refers to timer.o(i.TimerConfigure) for TimerConfigure
    drivers.o(.ARM.exidx.text.initTimer0) refers to drivers.o(.text.initTimer0) for [Anonymous Symbol]
    drivers.o(.text.timer0_delay) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    drivers.o(.text.timer0_delay) refers to timer.o(i.TimerLoadSet) for TimerLoadSet
    drivers.o(.text.timer0_delay) refers to timer.o(i.TimerIntClear) for TimerIntClear
    drivers.o(.text.timer0_delay) refers to timer.o(i.TimerEnable) for TimerEnable
    drivers.o(.text.timer0_delay) refers to timer.o(i.TimerIntStatus) for TimerIntStatus
    drivers.o(.ARM.exidx.text.timer0_delay) refers to drivers.o(.text.timer0_delay) for [Anonymous Symbol]
    drivers.o(.text.initTimer1) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initTimer1) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initTimer1) refers to gpio.o(i.GPIOPinTypeTimer) for GPIOPinTypeTimer
    drivers.o(.text.initTimer1) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    drivers.o(.text.initTimer1) refers to timer.o(i.TimerDisable) for TimerDisable
    drivers.o(.text.initTimer1) refers to timer.o(i.TimerConfigure) for TimerConfigure
    drivers.o(.text.initTimer1) refers to timer.o(i.TimerLoadSet) for TimerLoadSet
    drivers.o(.text.initTimer1) refers to timer.o(i.TimerControlEvent) for TimerControlEvent
    drivers.o(.text.initTimer1) refers to interrupt.o(i.IntRegister) for IntRegister
    drivers.o(.text.initTimer1) refers to interrupt.o(i.IntEnable) for IntEnable
    drivers.o(.text.initTimer1) refers to timer.o(i.TimerIntClear) for TimerIntClear
    drivers.o(.text.initTimer1) refers to timer.o(i.TimerIntEnable) for TimerIntEnable
    drivers.o(.ARM.exidx.text.initTimer1) refers to drivers.o(.text.initTimer1) for [Anonymous Symbol]
    drivers.o(.text.timer1_enable) refers to timer.o(i.TimerEnable) for TimerEnable
    drivers.o(.ARM.exidx.text.timer1_enable) refers to drivers.o(.text.timer1_enable) for [Anonymous Symbol]
    drivers.o(.text.timer1_disable) refers to timer.o(i.TimerDisable) for TimerDisable
    drivers.o(.ARM.exidx.text.timer1_disable) refers to drivers.o(.text.timer1_disable) for [Anonymous Symbol]
    drivers.o(.text.timer1_clear) refers to timer.o(i.TimerIntClear) for TimerIntClear
    drivers.o(.ARM.exidx.text.timer1_clear) refers to drivers.o(.text.timer1_clear) for [Anonymous Symbol]
    drivers.o(.text.initUltrasonic) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initUltrasonic) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initUltrasonic) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    drivers.o(.text.initUltrasonic) refers to timer.o(i.TimerDisable) for TimerDisable
    drivers.o(.text.initUltrasonic) refers to timer.o(i.TimerConfigure) for TimerConfigure
    drivers.o(.text.initUltrasonic) refers to drivers.o(.text.ultrasonic_edge_processor) for ultrasonic_edge_processor
    drivers.o(.text.initUltrasonic) refers to drivers.o(.text.initTimer1) for initTimer1
    drivers.o(.ARM.exidx.text.initUltrasonic) refers to drivers.o(.text.initUltrasonic) for [Anonymous Symbol]
    drivers.o(.text.ultrasonic_edge_processor) refers to timer.o(i.TimerIntClear) for TimerIntClear
    drivers.o(.text.ultrasonic_edge_processor) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    drivers.o(.text.ultrasonic_edge_processor) refers to timer.o(i.TimerValueGet) for TimerValueGet
    drivers.o(.text.ultrasonic_edge_processor) refers to drivers.o(.bss.risingEdge) for risingEdge
    drivers.o(.text.ultrasonic_edge_processor) refers to drivers.o(.bss.fallingEdge) for fallingEdge
    drivers.o(.text.ultrasonic_edge_processor) refers to drivers.o(.bss.captured) for captured
    drivers.o(.ARM.exidx.text.ultrasonic_edge_processor) refers to drivers.o(.text.ultrasonic_edge_processor) for [Anonymous Symbol]
    drivers.o(.text.ultrasonic_trigger) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.text.ultrasonic_trigger) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    drivers.o(.text.ultrasonic_trigger) refers to timer.o(i.TimerLoadSet) for TimerLoadSet
    drivers.o(.text.ultrasonic_trigger) refers to timer.o(i.TimerIntClear) for TimerIntClear
    drivers.o(.text.ultrasonic_trigger) refers to timer.o(i.TimerEnable) for TimerEnable
    drivers.o(.text.ultrasonic_trigger) refers to timer.o(i.TimerIntStatus) for TimerIntStatus
    drivers.o(.ARM.exidx.text.ultrasonic_trigger) refers to drivers.o(.text.ultrasonic_trigger) for [Anonymous Symbol]
    drivers.o(.text.ultrasonic_get_distance) refers to drivers.o(.bss.captured) for captured
    drivers.o(.text.ultrasonic_get_distance) refers to timer.o(i.TimerEnable) for TimerEnable
    drivers.o(.text.ultrasonic_get_distance) refers to drivers.o(.text.ultrasonic_trigger) for ultrasonic_trigger
    drivers.o(.text.ultrasonic_get_distance) refers to timer.o(i.TimerDisable) for TimerDisable
    drivers.o(.text.ultrasonic_get_distance) refers to timer.o(i.TimerIntClear) for TimerIntClear
    drivers.o(.text.ultrasonic_get_distance) refers to drivers.o(.bss.fallingEdge) for fallingEdge
    drivers.o(.text.ultrasonic_get_distance) refers to drivers.o(.bss.risingEdge) for risingEdge
    drivers.o(.text.ultrasonic_get_distance) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    drivers.o(.ARM.exidx.text.ultrasonic_get_distance) refers to drivers.o(.text.ultrasonic_get_distance) for [Anonymous Symbol]
    drivers.o(.text.initRGB) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initRGB) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initRGB) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    drivers.o(.text.initRGB) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.initRGB) refers to drivers.o(.text.initRGB) for [Anonymous Symbol]
    drivers.o(.text.setRGBColor) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.setRGBColor) refers to drivers.o(.text.setRGBColor) for [Anonymous Symbol]
    drivers.o(.text.initDoorLockLed) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initDoorLockLed) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initDoorLockLed) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    drivers.o(.ARM.exidx.text.initDoorLockLed) refers to drivers.o(.text.initDoorLockLed) for [Anonymous Symbol]
    drivers.o(.text.setDoorLockLed) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.setDoorLockLed) refers to drivers.o(.text.setDoorLockLed) for [Anonymous Symbol]
    drivers.o(.text.initBuzzer) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    drivers.o(.text.initBuzzer) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    drivers.o(.text.initBuzzer) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    drivers.o(.text.initBuzzer) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.initBuzzer) refers to drivers.o(.text.initBuzzer) for [Anonymous Symbol]
    drivers.o(.text.setOnBuzzer) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.setOnBuzzer) refers to drivers.o(.text.setOnBuzzer) for [Anonymous Symbol]
    drivers.o(.text.setOffBuzzer) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.setOffBuzzer) refers to drivers.o(.text.setOffBuzzer) for [Anonymous Symbol]
    drivers.o(.text.setBuzzerFrequency) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.setBuzzerFrequency) refers to drivers.o(.text.setBuzzerFrequency) for [Anonymous Symbol]
    drivers.o(.text.isGearDrive) refers to drivers.o(.bss.gearState) for gearState
    drivers.o(.ARM.exidx.text.isGearDrive) refers to drivers.o(.text.isGearDrive) for [Anonymous Symbol]
    drivers.o(.text.isGearReverse) refers to drivers.o(.bss.gearState) for gearState
    drivers.o(.ARM.exidx.text.isGearReverse) refers to drivers.o(.text.isGearReverse) for [Anonymous Symbol]
    drivers.o(.text.isIgnitionOn) refers to drivers.o(.bss.ignitionState) for ignitionState
    drivers.o(.ARM.exidx.text.isIgnitionOn) refers to drivers.o(.text.isIgnitionOn) for [Anonymous Symbol]
    drivers.o(.text.isDriverDoorOpen) refers to drivers.o(.bss.driverDoorState) for driverDoorState
    drivers.o(.ARM.exidx.text.isDriverDoorOpen) refers to drivers.o(.text.isDriverDoorOpen) for [Anonymous Symbol]
    drivers.o(.text.lockDoors) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.lockDoors) refers to drivers.o(.text.lockDoors) for [Anonymous Symbol]
    drivers.o(.text.unlockDoors) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    drivers.o(.ARM.exidx.text.unlockDoors) refers to drivers.o(.text.unlockDoors) for [Anonymous Symbol]
    drivers.o(.text.isManualLockOn) refers to drivers.o(.bss.manualLockState) for manualLockState
    drivers.o(.ARM.exidx.text.isManualLockOn) refers to drivers.o(.text.isManualLockOn) for [Anonymous Symbol]
    drivers.o(.text.isManualUnlockOn) refers to drivers.o(.bss.manualUnlockState) for manualUnlockState
    drivers.o(.ARM.exidx.text.isManualUnlockOn) refers to drivers.o(.text.isManualUnlockOn) for [Anonymous Symbol]
    clib_os.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_os.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_os.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    clib_os.o(.ARM.exidx.text.$Sub$$_fp_init) refers to clib_os.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    clib_os.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_os.o(.text.__user_perthread_libspace) refers to clib_os.o(.bss.os_libspace) for os_libspace
    clib_os.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_os.o(.text.__user_perthread_libspace) refers to clib_os.o(.bss.os_libspace_id) for os_libspace_id
    clib_os.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_os.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_os.o(.text._mutex_initialize) refers to clib_os.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_os.o(.text._mutex_initialize) refers to clib_os.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_os.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_os.o(.text._mutex_initialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_os.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_os.o(.ARM.exidx.text._mutex_initialize) refers to clib_os.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_os.o(.text._mutex_acquire) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_os.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_os.o(.ARM.exidx.text._mutex_acquire) refers to clib_os.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_os.o(.text._mutex_release) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_os.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_os.o(.ARM.exidx.text._mutex_release) refers to clib_os.o(.text._mutex_release) for [Anonymous Symbol]
    clib_os.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_os.o(.text._mutex_free) refers to clib_os.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_os.o(.ARM.exidx.text._mutex_free) refers to clib_os.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.xTaskAbortDelay) for xTaskAbortDelay
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCapacity) refers to queue.o(.text.uxQueueGetQueueLength) for uxQueueGetQueueLength
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetMsgSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for uxQueueGetQueueItemSize
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueGetQueueLength) for uxQueueGetQueueLength
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to drivers.o(.text.GPIOA_Handler) for GPIOA_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1) for .Lswitch.table.SystemCoreClockUpdate.1
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetStaticBuffer) refers to event_groups.o(.text.xEventGroupGetStaticBuffer) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.SVC_Handler) for SVC_Handler
    port.o(.text.xPortStartScheduler) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortResetHeapMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.xPortResetHeapMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortResetHeapMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortResetHeapMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.ARM.exidx.text.vPortHeapResetState) refers to heap_4.o(.text.vPortHeapResetState) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreateStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGenericGetStaticBuffers) refers to queue.o(.text.xQueueGenericGetStaticBuffers) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutexStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueLength) refers to queue.o(.text.uxQueueGetQueueLength) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskBasePriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet) refers to tasks.o(.text.uxTaskBasePriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.text.uxTaskBasePriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB) for vApplicationGetIdleTaskMemory.xIdleTaskTCB
    tasks.o(.text.vTaskStartScheduler) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack) for vApplicationGetIdleTaskMemory.uxIdleTaskStack
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandles.0) for xIdleTaskHandles.0
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for xTimerGetTimerDaemonTaskHandle
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xIdleTaskHandles.0) for xIdleTaskHandles.0
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetStaticBuffers) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetStaticBuffers) refers to tasks.o(.text.xTaskGetStaticBuffers) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.uxTaskGetSystemState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.text.xTaskGetCurrentTaskHandleForCore) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB) for vApplicationGetIdleTaskMemory.xIdleTaskTCB
    tasks.o(.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack) for vApplicationGetIdleTaskMemory.uxIdleTaskStack
    tasks.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    tasks.o(.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB) for vApplicationGetTimerTaskMemory.xTimerTaskTCB
    tasks.o(.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack) for vApplicationGetTimerTaskMemory.uxTimerTaskStack
    tasks.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskResetState) refers to tasks.o(.text.vTaskResetState) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.xTimerCreateTimerTask) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvInitialiseNewTimer) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvInitialiseNewTimer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromTask) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommandFromTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask) refers to timers.o(.text.xTimerGenericCommandFromTask) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR) refers to timers.o(.text.xTimerGenericCommandFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetStaticBuffer) refers to timers.o(.text.xTimerGetStaticBuffer) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.vTimerResetState) refers to timers.o(.text.vTimerResetState) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    adc.o(i.ADCIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    adc.o(i.ADCIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    adc.o(i.ADCIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    adc.o(i.ADCIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    adc.o(i.ADCSoftwareOversampleConfigure) refers to adc.o(.data) for .data
    adc.o(i.ADCSoftwareOversampleDataGet) refers to adc.o(.data) for .data
    adc.o(i.ADCSoftwareOversampleStepConfigure) refers to adc.o(.data) for .data
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    timer.o(i.TimerIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    timer.o(i.TimerIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    timer.o(i.TimerIntRegister) refers to timer.o(.constdata) for .constdata
    timer.o(i.TimerIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    timer.o(i.TimerIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    timer.o(i.TimerIntUnregister) refers to timer.o(.constdata) for .constdata
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_wp.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_os.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to clib_os.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.setupHardware), (34 bytes).
    Removing main.o(.ARM.exidx.text.setupHardware), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing safety_tasks.o(.text), (0 bytes).
    Removing safety_tasks.o(.ARM.exidx.text.createSafetyTasks), (8 bytes).
    Removing safety_tasks.o(.ARM.exidx.text.doorTask), (8 bytes).
    Removing safety_tasks.o(.ARM.exidx.text.rearAssistTask), (8 bytes).
    Removing safety_tasks.o(.ARM.exidx.text.lcdUpdateTask), (8 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.initLCD), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SendCommand), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Print), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetCursor), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing drivers.o(.text), (0 bytes).
    Removing drivers.o(.text.debounceDelay), (28 bytes).
    Removing drivers.o(.ARM.exidx.text.debounceDelay), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.GPIOA_Handler), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initSwitches), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initADC), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.readSpeedADC), (8 bytes).
    Removing drivers.o(.text.initTimer0), (56 bytes).
    Removing drivers.o(.ARM.exidx.text.initTimer0), (8 bytes).
    Removing drivers.o(.text.timer0_delay), (70 bytes).
    Removing drivers.o(.ARM.exidx.text.timer0_delay), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initTimer1), (8 bytes).
    Removing drivers.o(.text.timer1_enable), (14 bytes).
    Removing drivers.o(.ARM.exidx.text.timer1_enable), (8 bytes).
    Removing drivers.o(.text.timer1_disable), (14 bytes).
    Removing drivers.o(.ARM.exidx.text.timer1_disable), (8 bytes).
    Removing drivers.o(.text.timer1_clear), (14 bytes).
    Removing drivers.o(.ARM.exidx.text.timer1_clear), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initUltrasonic), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.ultrasonic_edge_processor), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.ultrasonic_trigger), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.ultrasonic_get_distance), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initRGB), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.setRGBColor), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initDoorLockLed), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.setDoorLockLed), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.initBuzzer), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.setOnBuzzer), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.setOffBuzzer), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.setBuzzerFrequency), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.isGearDrive), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.isGearReverse), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.isIgnitionOn), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.isDriverDoorOpen), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.lockDoors), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.unlockDoors), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.isManualLockOn), (8 bytes).
    Removing drivers.o(.ARM.exidx.text.isManualUnlockOn), (8 bytes).
    Removing clib_os.o(.text), (0 bytes).
    Removing clib_os.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_os.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing clib_os.o(.text.__user_perthread_libspace), (130 bytes).
    Removing clib_os.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_os.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_os.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_os.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_os.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_os.o(.bss.os_libspace), (480 bytes).
    Removing clib_os.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (108 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (228 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (4 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (74 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (86 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (246 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (172 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (278 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (238 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (156 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (86 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (190 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (138 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (128 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (126 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (166 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (162 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (270 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (220 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (240 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (72 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (24 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.os), (1 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (336 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (44 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (292 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (132 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (238 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (44 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetStaticBuffer), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetStaticBuffer), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (22 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (68 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortResetHeapMinimumEverFreeHeapSize), (22 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortResetHeapMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (36 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (228 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing heap_4.o(.text.vPortHeapResetState), (54 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortHeapResetState), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (128 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.text.xQueueGenericGetStaticBuffers), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericGetStaticBuffers), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (16 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (44 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (48 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (284 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (340 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (206 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (100 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueItemSize), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueLength), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueLength), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (18 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGet), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGetFromISR), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (242 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (178 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (64 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetStaticBuffers), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetStaticBuffers), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1164 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (284 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (202 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandleForCore), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (172 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (222 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (282 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (364 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.text.vApplicationGetIdleTaskMemory), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing tasks.o(.text.vTaskResetState), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResetState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (170 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromTask), (84 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromISR), (68 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (22 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (44 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (28 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (28 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.xTimerGetStaticBuffer), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetStaticBuffer), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (12 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (28 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (22 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (24 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (54 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerResetState), (24 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerResetState), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing adc.o(i.ADCBusy), (8 bytes).
    Removing adc.o(i.ADCClockConfigGet), (40 bytes).
    Removing adc.o(i.ADCClockConfigSet), (28 bytes).
    Removing adc.o(i.ADCComparatorConfigure), (10 bytes).
    Removing adc.o(i.ADCComparatorIntClear), (4 bytes).
    Removing adc.o(i.ADCComparatorIntDisable), (18 bytes).
    Removing adc.o(i.ADCComparatorIntEnable), (16 bytes).
    Removing adc.o(i.ADCComparatorIntStatus), (4 bytes).
    Removing adc.o(i.ADCComparatorRegionSet), (14 bytes).
    Removing adc.o(i.ADCComparatorReset), (40 bytes).
    Removing adc.o(i.ADCHardwareOversampleConfigure), (18 bytes).
    Removing adc.o(i.ADCIntClearEx), (4 bytes).
    Removing adc.o(i.ADCIntDisable), (16 bytes).
    Removing adc.o(i.ADCIntDisableEx), (10 bytes).
    Removing adc.o(i.ADCIntEnable), (16 bytes).
    Removing adc.o(i.ADCIntEnableEx), (8 bytes).
    Removing adc.o(i.ADCIntRegister), (104 bytes).
    Removing adc.o(i.ADCIntStatusEx), (22 bytes).
    Removing adc.o(i.ADCIntUnregister), (108 bytes).
    Removing adc.o(i.ADCPhaseDelayGet), (4 bytes).
    Removing adc.o(i.ADCPhaseDelaySet), (4 bytes).
    Removing adc.o(i.ADCReferenceGet), (8 bytes).
    Removing adc.o(i.ADCReferenceSet), (12 bytes).
    Removing adc.o(i.ADCSequenceDMADisable), (18 bytes).
    Removing adc.o(i.ADCSequenceDMAEnable), (16 bytes).
    Removing adc.o(i.ADCSequenceDisable), (16 bytes).
    Removing adc.o(i.ADCSequenceOverflow), (12 bytes).
    Removing adc.o(i.ADCSequenceOverflowClear), (10 bytes).
    Removing adc.o(i.ADCSequenceUnderflow), (12 bytes).
    Removing adc.o(i.ADCSequenceUnderflowClear), (10 bytes).
    Removing adc.o(i.ADCSoftwareOversampleConfigure), (44 bytes).
    Removing adc.o(i.ADCSoftwareOversampleDataGet), (88 bytes).
    Removing adc.o(i.ADCSoftwareOversampleStepConfigure), (168 bytes).
    Removing adc.o(.data), (6 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUART), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing timer.o(i.TimerADCEventGet), (4 bytes).
    Removing timer.o(i.TimerADCEventSet), (4 bytes).
    Removing timer.o(i.TimerClockSourceGet), (6 bytes).
    Removing timer.o(i.TimerClockSourceSet), (6 bytes).
    Removing timer.o(i.TimerControlLevel), (22 bytes).
    Removing timer.o(i.TimerControlStall), (22 bytes).
    Removing timer.o(i.TimerControlTrigger), (80 bytes).
    Removing timer.o(i.TimerControlWaitOnTrigger), (48 bytes).
    Removing timer.o(i.TimerDMAEventGet), (4 bytes).
    Removing timer.o(i.TimerDMAEventSet), (4 bytes).
    Removing timer.o(i.TimerIntDisable), (10 bytes).
    Removing timer.o(i.TimerIntRegister), (104 bytes).
    Removing timer.o(i.TimerIntUnregister), (104 bytes).
    Removing timer.o(i.TimerLoadGet), (10 bytes).
    Removing timer.o(i.TimerLoadGet64), (14 bytes).
    Removing timer.o(i.TimerLoadSet64), (6 bytes).
    Removing timer.o(i.TimerMatchGet), (10 bytes).
    Removing timer.o(i.TimerMatchGet64), (14 bytes).
    Removing timer.o(i.TimerMatchSet), (18 bytes).
    Removing timer.o(i.TimerMatchSet64), (6 bytes).
    Removing timer.o(i.TimerPrescaleGet), (10 bytes).
    Removing timer.o(i.TimerPrescaleMatchGet), (10 bytes).
    Removing timer.o(i.TimerPrescaleMatchSet), (18 bytes).
    Removing timer.o(i.TimerPrescaleSet), (18 bytes).
    Removing timer.o(i.TimerRTCDisable), (10 bytes).
    Removing timer.o(i.TimerRTCEnable), (10 bytes).
    Removing timer.o(i.TimerSynchronize), (4 bytes).
    Removing timer.o(i.TimerUpdateMode), (42 bytes).
    Removing timer.o(i.TimerValueGet64), (14 bytes).
    Removing timer.o(.constdata), (160 bytes).

681 unused section(s) (total 26237 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    clib_os.c                                0x00000000   Number         0  clib_os.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    drivers.c                                0x00000000   Number         0  drivers.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    safety_tasks.c                           0x00000000   Number         0  safety_tasks.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x000002a8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x000002e4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x00000300   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x00000300   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000013  0x00000306   Section        6  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    .ARM.Collect$$_printf_percent$$00000017  0x0000030c   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x00000310   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000312   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000316   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000316   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000318   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000031a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000031a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000031a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000031a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000031a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000031a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000031a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000031c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000031c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000031c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x00000322   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0000032a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000032e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000032e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000336   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000338   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000338   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000033c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x00000344   Number         0  sysctl.o(.emb_text)
    .emb_text                                0x00000344   Section        6  sysctl.o(.emb_text)
    $v0                                      0x0000034c   Number         0  cpu.o(.emb_text)
    .emb_text                                0x0000034c   Section       38  cpu.o(.emb_text)
    $v0                                      0x00000374   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000374   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000488   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x000004b0   Section        0  _printf_pad.o(.text)
    .text                                    0x000004fe   Section        0  _printf_str.o(.text)
    .text                                    0x00000550   Section        0  _printf_dec.o(.text)
    .text                                    0x000005c8   Section        0  __printf_wp.o(.text)
    .text                                    0x000006d6   Section        0  strlen.o(.text)
    .text                                    0x00000714   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0000079e   Section       16  aeabi_memset4.o(.text)
    .text                                    0x000007ae   Section       68  rt_memclr.o(.text)
    .text                                    0x000007f2   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000840   Section        0  heapauxi.o(.text)
    .text                                    0x00000846   Section        0  _printf_intcommon.o(.text)
    _printf_input_char                       0x000008f9   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x000008f8   Section        0  _printf_char_common.o(.text)
    .text                                    0x00000928   Section        0  _sputc.o(.text)
    .text                                    0x00000932   Section        0  _printf_char.o(.text)
    .text                                    0x0000095e   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000009c2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000a0c   Section        0  exit.o(.text)
    .text                                    0x00000a20   Section        8  libspace.o(.text)
    .text                                    0x00000a28   Section        0  sys_exit.o(.text)
    .text                                    0x00000a34   Section        2  use_no_semi.o(.text)
    .text                                    0x00000a36   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000a38   Section        0  clib_os.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x00000a50   Section        0  drivers.o(.text.GPIOA_Handler)
    [Anonymous Symbol]                       0x00000b40   Section        0  lcd.o(.text.LCD_Clear)
    [Anonymous Symbol]                       0x00000b68   Section        0  lcd.o(.text.LCD_Print)
    LCD_SendCommand                          0x00000c19   Thumb Code   144  lcd.o(.text.LCD_SendCommand)
    [Anonymous Symbol]                       0x00000c18   Section        0  lcd.o(.text.LCD_SendCommand)
    [Anonymous Symbol]                       0x00000ca8   Section        0  lcd.o(.text.LCD_SetCursor)
    [Anonymous Symbol]                       0x00000cc0   Section        0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000d20   Section        0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000d40   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000d60   Section        0  system_tm4c123.o(.text.SystemInit)
    __tagsym$$used.1                         0x00000de8   Number         0  clib_os.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x00000de8   Section        0  clib_os.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x00000e0c   Number         0  clib_os.o(.text._mutex_free)
    [Anonymous Symbol]                       0x00000e0c   Section        0  clib_os.o(.text._mutex_free)
    __tagsym$$used.0                         0x00000e5c   Number         0  clib_os.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x00000e5c   Section        0  clib_os.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x00000edc   Number         0  clib_os.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00000edc   Section        0  clib_os.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00000f04   Section        0  clib_os.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x00000f08   Section        0  safety_tasks.o(.text.createSafetyTasks)
    [Anonymous Symbol]                       0x00000fa4   Section        0  drivers.o(.text.delay_ms)
    [Anonymous Symbol]                       0x00001010   Section        0  safety_tasks.o(.text.doorTask)
    [Anonymous Symbol]                       0x0000118c   Section        0  drivers.o(.text.initADC)
    [Anonymous Symbol]                       0x00001200   Section        0  drivers.o(.text.initBuzzer)
    [Anonymous Symbol]                       0x00001238   Section        0  drivers.o(.text.initDoorLockLed)
    [Anonymous Symbol]                       0x00001264   Section        0  lcd.o(.text.initLCD)
    [Anonymous Symbol]                       0x000012e4   Section        0  drivers.o(.text.initRGB)
    [Anonymous Symbol]                       0x0000131c   Section        0  drivers.o(.text.initSwitches)
    [Anonymous Symbol]                       0x0000138c   Section        0  drivers.o(.text.initTimer1)
    [Anonymous Symbol]                       0x0000142c   Section        0  drivers.o(.text.initUltrasonic)
    [Anonymous Symbol]                       0x00001494   Section        0  drivers.o(.text.isDriverDoorOpen)
    [Anonymous Symbol]                       0x000014a8   Section        0  drivers.o(.text.isGearDrive)
    [Anonymous Symbol]                       0x000014bc   Section        0  drivers.o(.text.isGearReverse)
    [Anonymous Symbol]                       0x000014d0   Section        0  drivers.o(.text.isIgnitionOn)
    [Anonymous Symbol]                       0x000014e4   Section        0  drivers.o(.text.isManualLockOn)
    [Anonymous Symbol]                       0x000014f0   Section        0  drivers.o(.text.isManualUnlockOn)
    [Anonymous Symbol]                       0x000014fc   Section        0  safety_tasks.o(.text.lcdUpdateTask)
    [Anonymous Symbol]                       0x000018b8   Section        0  drivers.o(.text.lockDoors)
    [Anonymous Symbol]                       0x000018c8   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000018f5   Thumb Code   178  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000018f4   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000019a9   Thumb Code   306  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000019a8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x00001add   Thumb Code   106  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001adc   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvIdleTask                              0x00001b49   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001b48   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewTask                     0x00001b75   Thumb Code   282  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001b74   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvPortStartFirstTask                    0x00001c91   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001c90   Section        0  port.o(.text.prvPortStartFirstTask)
    prvSampleTimeNow                         0x00001cb9   Thumb Code   184  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001cb8   Section        0  timers.o(.text.prvSampleTimeNow)
    prvTaskExitError                         0x00001d71   Thumb Code    62  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001d70   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001db1   Thumb Code   606  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001db0   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00002011   Thumb Code   116  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002010   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002084   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002230   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002248   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002270   Section        0  drivers.o(.text.readSpeedADC)
    [Anonymous Symbol]                       0x000022c8   Section        0  safety_tasks.o(.text.rearAssistTask)
    [Anonymous Symbol]                       0x000023b4   Section        0  drivers.o(.text.setBuzzerFrequency)
    [Anonymous Symbol]                       0x0000249c   Section        0  drivers.o(.text.setDoorLockLed)
    [Anonymous Symbol]                       0x000024b4   Section        0  drivers.o(.text.setOffBuzzer)
    [Anonymous Symbol]                       0x000024c4   Section        0  drivers.o(.text.setOnBuzzer)
    [Anonymous Symbol]                       0x000024d4   Section        0  drivers.o(.text.setRGBColor)
    [Anonymous Symbol]                       0x000024fc   Section        0  drivers.o(.text.ultrasonic_edge_processor)
    [Anonymous Symbol]                       0x0000254c   Section        0  drivers.o(.text.ultrasonic_get_distance)
    [Anonymous Symbol]                       0x00002610   Section        0  drivers.o(.text.ultrasonic_trigger)
    [Anonymous Symbol]                       0x00002678   Section        0  drivers.o(.text.unlockDoors)
    [Anonymous Symbol]                       0x00002688   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000026ac   Section        0  tasks.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x000026c8   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x000026cc   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x000026e4   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x000026ec   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x0000274d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0000274c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002760   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00002798   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000027b8   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x000028b0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000028e4   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x000028f8   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002940   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x000029ec   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002a08   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002a18   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002a3c   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00002a90   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00002b28   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002bfc   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002c0c   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002c0c   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002cdc   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002e74   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x00002ea4   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00002ecc   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x00002f50   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002fd8   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x00003068   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x0000323c   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00003394   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00003504   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00003598   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x000035f8   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x00003674   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x0000369c   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000036a8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0000383c   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x000038c4   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x0000396c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003a50   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00003bc4   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.ADCIntClear                            0x00003c80   Section        0  adc.o(i.ADCIntClear)
    i.ADCIntStatus                           0x00003c8a   Section        0  adc.o(i.ADCIntStatus)
    i.ADCProcessorTrigger                    0x00003cbe   Section        0  adc.o(i.ADCProcessorTrigger)
    i.ADCSequenceConfigure                   0x00003cd8   Section        0  adc.o(i.ADCSequenceConfigure)
    i.ADCSequenceDataGet                     0x00003d38   Section        0  adc.o(i.ADCSequenceDataGet)
    i.ADCSequenceEnable                      0x00003d5c   Section        0  adc.o(i.ADCSequenceEnable)
    i.ADCSequenceStepConfigure               0x00003d6a   Section        0  adc.o(i.ADCSequenceStepConfigure)
    i.GPIODirModeSet                         0x00003e04   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOIntClear                           0x00003e2c   Section        0  gpio.o(i.GPIOIntClear)
    i.GPIOIntDisable                         0x00003e32   Section        0  gpio.o(i.GPIOIntDisable)
    i.GPIOIntEnable                          0x00003e40   Section        0  gpio.o(i.GPIOIntEnable)
    i.GPIOIntRegister                        0x00003e4c   Section        0  gpio.o(i.GPIOIntRegister)
    i.GPIOIntStatus                          0x00003e66   Section        0  gpio.o(i.GPIOIntStatus)
    i.GPIOIntTypeSet                         0x00003e74   Section        0  gpio.o(i.GPIOIntTypeSet)
    i.GPIOPadConfigSet                       0x00003ec4   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x00004034   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinRead                            0x00004078   Section        0  gpio.o(i.GPIOPinRead)
    i.GPIOPinTypeADC                         0x0000407e   Section        0  gpio.o(i.GPIOPinTypeADC)
    i.GPIOPinTypeGPIOInput                   0x0000409a   Section        0  gpio.o(i.GPIOPinTypeGPIOInput)
    i.GPIOPinTypeGPIOOutput                  0x000040b6   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinTypeTimer                       0x000040d2   Section        0  gpio.o(i.GPIOPinTypeTimer)
    i.GPIOPinWrite                           0x000040ee   Section        0  gpio.o(i.GPIOPinWrite)
    i.IntEnable                              0x000040f4   Section        0  interrupt.o(i.IntEnable)
    i.IntMasterEnable                        0x00004158   Section        0  interrupt.o(i.IntMasterEnable)
    i.IntRegister                            0x00004168   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlClockGet                         0x0000419c   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x000042f0   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00004318   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.TimerConfigure                         0x00004344   Section        0  timer.o(i.TimerConfigure)
    i.TimerControlEvent                      0x000043a4   Section        0  timer.o(i.TimerControlEvent)
    i.TimerDisable                           0x000043b6   Section        0  timer.o(i.TimerDisable)
    i.TimerEnable                            0x000043c6   Section        0  timer.o(i.TimerEnable)
    i.TimerIntClear                          0x000043d4   Section        0  timer.o(i.TimerIntClear)
    i.TimerIntEnable                         0x000043d8   Section        0  timer.o(i.TimerIntEnable)
    i.TimerIntStatus                         0x000043e0   Section        0  timer.o(i.TimerIntStatus)
    i.TimerLoadSet                           0x000043ea   Section        0  timer.o(i.TimerLoadSet)
    i.TimerValueGet                          0x000043fc   Section        0  timer.o(i.TimerValueGet)
    _GPIOIntNumberGet                        0x00004409   Thumb Code    62  gpio.o(i._GPIOIntNumberGet)
    i._GPIOIntNumberGet                      0x00004408   Section        0  gpio.o(i._GPIOIntNumberGet)
    i._is_digit                              0x00004458   Section        0  __printf_wp.o(i._is_digit)
    $v0                                      0x00004466   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00004466   Section       26  fpinit.o(x$fpl$fpinit)
    g_ppui32GPIOIntMapBlizzard               0x00004480   Data         192  gpio.o(.constdata)
    .constdata                               0x00004480   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00004540   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x00004618   Data         144  gpio.o(.constdata)
    g_pui32Priority                          0x000046a8   Data          32  interrupt.o(.constdata)
    .constdata                               0x000046a8   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000046c8   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00004764   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x00004778   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x0000478c   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x000047a0   Data          20  interrupt.o(.constdata)
    g_pui32VCOFrequencies                    0x000047b4   Data           8  sysctl.o(.constdata)
    .constdata                               0x000047b4   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x000047bc   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x00004828   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x000049d8   Data          48  sysctl.o(.constdata)
    .L.str.6                                 0x00004a08   Data          10  safety_tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004a08   Section        0  safety_tasks.o(.rodata.str1.1)
    .L.str.7                                 0x00004a12   Data          10  safety_tasks.o(.rodata.str1.1)
    .L.str.5                                 0x00004a1c   Data           9  safety_tasks.o(.rodata.str1.1)
    uxTopUsedPriority                        0x00004a28   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    [Anonymous Symbol]                       0x00004a28   Section        0  tasks.o(.rodata.uxTopUsedPriority)
    lcdUpdateTask.lastGear                   0x20000004   Data           1  safety_tasks.o(.data.lcdUpdateTask.lastGear)
    [Anonymous Symbol]                       0x20000004   Section        0  safety_tasks.o(.data.lcdUpdateTask.lastGear)
    uxCriticalNesting                        0x20000008   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000008   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    .bss                                     0x20000670   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x200006d4   Data         400  clib_os.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x200006d4   Section        0  clib_os.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x20000864   Data          20  clib_os.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x20000864   Section        0  clib_os.o(.bss.clib_mutex_id)
    doorTask.wasHigh                         0x20000882   Data           1  safety_tasks.o(.bss.doorTask.wasHigh)
    [Anonymous Symbol]                       0x20000882   Section        0  safety_tasks.o(.bss.doorTask.wasHigh)
    lcdUpdateTask.doorWasOpen                0x20000898   Data           1  safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen)
    [Anonymous Symbol]                       0x20000898   Section        0  safety_tasks.o(.bss.lcdUpdateTask.doorWasOpen)
    lcdUpdateTask.lastLock                   0x20000899   Data           1  safety_tasks.o(.bss.lcdUpdateTask.lastLock)
    [Anonymous Symbol]                       0x20000899   Section        0  safety_tasks.o(.bss.lcdUpdateTask.lastLock)
    lcdUpdateTask.wasOn                      0x2000089a   Data           1  safety_tasks.o(.bss.lcdUpdateTask.wasOn)
    [Anonymous Symbol]                       0x2000089a   Section        0  safety_tasks.o(.bss.lcdUpdateTask.wasOn)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x2000089d   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x2000089d   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x200008f0   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x200008f0   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x20000940   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000940   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000944   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000948   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000948   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000094c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000094c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000950   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000950   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000954   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000954   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000958   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000958   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000095c   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000095c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000dc4   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000dc4   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002dc4   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002dc4   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002dc8   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002dc8   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20002dcc   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002dcc   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002dd0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002dd0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002dd4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002dd4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002dd8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002dd8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002ddc   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002ddc   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.uxIdleTaskStack 0x20002de0   Data         512  tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack)
    [Anonymous Symbol]                       0x20002de0   Section        0  tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack)
    vApplicationGetIdleTaskMemory.xIdleTaskTCB 0x20002fe0   Data          92  tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB)
    [Anonymous Symbol]                       0x20002fe0   Section        0  tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB)
    vApplicationGetTimerTaskMemory.uxTimerTaskStack 0x2000303c   Data         512  tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack)
    [Anonymous Symbol]                       0x2000303c   Section        0  tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack)
    vApplicationGetTimerTaskMemory.xTimerTaskTCB 0x2000323c   Data          92  tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB)
    [Anonymous Symbol]                       0x2000323c   Section        0  tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB)
    xActiveTimerList1                        0x20003298   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20003298   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x200032ac   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x200032ac   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200032c0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200032c0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200032d4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200032d4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200032e8   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200032e8   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandles.0                       0x200032ec   Data           4  tasks.o(.bss.xIdleTaskHandles.0)
    [Anonymous Symbol]                       0x200032ec   Section        0  tasks.o(.bss.xIdleTaskHandles.0)
    xMinimumEverFreeBytesRemaining           0x200032f0   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x200032f0   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x200032f4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200032f4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200032f8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200032f8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x200032fc   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x200032fc   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20003300   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20003300   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20003304   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20003304   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20003308   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20003308   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x2000331c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x2000331c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20003320   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20003320   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20003328   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20003328   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x2000333c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x2000333c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20003350   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20003350   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20003354   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20003354   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20003358   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20003358   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPendings                           0x2000335c   Data           4  tasks.o(.bss.xYieldPendings)
    [Anonymous Symbol]                       0x2000335c   Section        0  tasks.o(.bss.xYieldPendings)
    Heap_Mem                                 0x20003360   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20003360   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20003360   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20003360   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20003560   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x000002a9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x000002a9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x000002e5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_d                                0x00000301   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent                          0x00000301   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_c                                0x00000307   Thumb Code     0  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    _printf_percent_end                      0x0000030d   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x00000311   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000317   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000319   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000031b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000031d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000031d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000031d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x00000323   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0000032b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0000032f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000032f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000337   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000339   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000339   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000033d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SysCtlDelay                              0x00000345   Thumb Code     6  sysctl.o(.emb_text)
    CPUcpsid                                 0x0000034d   Thumb Code     8  cpu.o(.emb_text)
    CPUprimask                               0x00000355   Thumb Code     6  cpu.o(.emb_text)
    CPUcpsie                                 0x0000035b   Thumb Code     8  cpu.o(.emb_text)
    CPUwfi                                   0x00000363   Thumb Code     4  cpu.o(.emb_text)
    CPUbasepriSet                            0x00000367   Thumb Code     6  cpu.o(.emb_text)
    CPUbasepriGet                            0x0000036d   Thumb Code     6  cpu.o(.emb_text)
    Reset_Handler                            0x00000375   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000437   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000439   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000043b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x0000043d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000043f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000441   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000443   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000445   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000447   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000449   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000044b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x0000044d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000044f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000451   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000453   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000455   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000457   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000459   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000045b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000045d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000045f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000461   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000463   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000465   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000469   Thumb Code     0  startup_tm4c123.o(.text)
    __2sprintf                               0x00000489   Thumb Code    34  noretval__2sprintf.o(.text)
    _printf_pre_padding                      0x000004b1   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x000004dd   Thumb Code    34  _printf_pad.o(.text)
    _printf_str                              0x000004ff   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x00000551   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x000005c9   Thumb Code   270  __printf_wp.o(.text)
    strlen                                   0x000006d7   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x00000715   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000715   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0000077b   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0000079f   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0000079f   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x000007af   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x000007af   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x000007b3   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x000007f3   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000007f3   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000007f3   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x000007f7   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x00000841   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000843   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000845   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x00000847   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_char_common                      0x00000903   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x00000929   Thumb Code    10  _sputc.o(.text)
    _printf_cs_common                        0x00000933   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x00000947   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x00000957   Thumb Code     8  _printf_char.o(.text)
    __aeabi_memcpy4                          0x0000095f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000095f   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000095f   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000009a7   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x000009c3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000a0d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000a21   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000a21   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000a29   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000a35   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000a35   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000a37   Thumb Code     0  indicate_semi.o(.text)
    _fp_init                                 0x00000a39   Thumb Code    22  clib_os.o(.text.$Sub$$_fp_init)
    GPIOA_Handler                            0x00000a51   Thumb Code   238  drivers.o(.text.GPIOA_Handler)
    LCD_Clear                                0x00000b41   Thumb Code    40  lcd.o(.text.LCD_Clear)
    LCD_Print                                0x00000b69   Thumb Code   176  lcd.o(.text.LCD_Print)
    LCD_SetCursor                            0x00000ca9   Thumb Code    24  lcd.o(.text.LCD_SetCursor)
    PendSV_Handler                           0x00000cc1   Thumb Code    96  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000d21   Thumb Code    32  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000d41   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x00000d61   Thumb Code   136  system_tm4c123.o(.text.SystemInit)
    _mutex_acquire                           0x00000de9   Thumb Code    36  clib_os.o(.text._mutex_acquire)
    _mutex_free                              0x00000e0d   Thumb Code    78  clib_os.o(.text._mutex_free)
    _mutex_initialize                        0x00000e5d   Thumb Code   126  clib_os.o(.text._mutex_initialize)
    _mutex_release                           0x00000edd   Thumb Code    38  clib_os.o(.text._mutex_release)
    _platform_post_stackheap_init            0x00000f05   Thumb Code     2  clib_os.o(.text._platform_post_stackheap_init)
    createSafetyTasks                        0x00000f09   Thumb Code   136  safety_tasks.o(.text.createSafetyTasks)
    delay_ms                                 0x00000fa5   Thumb Code   106  drivers.o(.text.delay_ms)
    doorTask                                 0x00001011   Thumb Code   360  safety_tasks.o(.text.doorTask)
    initADC                                  0x0000118d   Thumb Code   114  drivers.o(.text.initADC)
    initBuzzer                               0x00001201   Thumb Code    56  drivers.o(.text.initBuzzer)
    initDoorLockLed                          0x00001239   Thumb Code    44  drivers.o(.text.initDoorLockLed)
    initLCD                                  0x00001265   Thumb Code   128  lcd.o(.text.initLCD)
    initRGB                                  0x000012e5   Thumb Code    56  drivers.o(.text.initRGB)
    initSwitches                             0x0000131d   Thumb Code   112  drivers.o(.text.initSwitches)
    initTimer1                               0x0000138d   Thumb Code   158  drivers.o(.text.initTimer1)
    initUltrasonic                           0x0000142d   Thumb Code   102  drivers.o(.text.initUltrasonic)
    isDriverDoorOpen                         0x00001495   Thumb Code    18  drivers.o(.text.isDriverDoorOpen)
    isGearDrive                              0x000014a9   Thumb Code    20  drivers.o(.text.isGearDrive)
    isGearReverse                            0x000014bd   Thumb Code    20  drivers.o(.text.isGearReverse)
    isIgnitionOn                             0x000014d1   Thumb Code    18  drivers.o(.text.isIgnitionOn)
    isManualLockOn                           0x000014e5   Thumb Code    12  drivers.o(.text.isManualLockOn)
    isManualUnlockOn                         0x000014f1   Thumb Code    12  drivers.o(.text.isManualUnlockOn)
    lcdUpdateTask                            0x000014fd   Thumb Code   884  safety_tasks.o(.text.lcdUpdateTask)
    lockDoors                                0x000018b9   Thumb Code    16  drivers.o(.text.lockDoors)
    main                                     0x000018c9   Thumb Code    42  main.o(.text.main)
    pvPortMalloc                             0x00002085   Thumb Code   428  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002231   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002249   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    readSpeedADC                             0x00002271   Thumb Code    86  drivers.o(.text.readSpeedADC)
    rearAssistTask                           0x000022c9   Thumb Code   234  safety_tasks.o(.text.rearAssistTask)
    setBuzzerFrequency                       0x000023b5   Thumb Code   230  drivers.o(.text.setBuzzerFrequency)
    setDoorLockLed                           0x0000249d   Thumb Code    24  drivers.o(.text.setDoorLockLed)
    setOffBuzzer                             0x000024b5   Thumb Code    16  drivers.o(.text.setOffBuzzer)
    setOnBuzzer                              0x000024c5   Thumb Code    16  drivers.o(.text.setOnBuzzer)
    setRGBColor                              0x000024d5   Thumb Code    38  drivers.o(.text.setRGBColor)
    ultrasonic_edge_processor                0x000024fd   Thumb Code    78  drivers.o(.text.ultrasonic_edge_processor)
    ultrasonic_get_distance                  0x0000254d   Thumb Code   196  drivers.o(.text.ultrasonic_get_distance)
    ultrasonic_trigger                       0x00002611   Thumb Code   102  drivers.o(.text.ultrasonic_trigger)
    unlockDoors                              0x00002679   Thumb Code    16  drivers.o(.text.unlockDoors)
    uxListRemove                             0x00002689   Thumb Code    34  list.o(.text.uxListRemove)
    vApplicationGetTimerTaskMemory           0x000026ad   Thumb Code    26  tasks.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x000026c9   Thumb Code     4  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x000026cd   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x000026e5   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x000026ed   Thumb Code    96  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00002761   Thumb Code    54  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00002799   Thumb Code    32  port.o(.text.vPortExitCritical)
    vPortFree                                0x000027b9   Thumb Code   248  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x000028b1   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x000028e5   Thumb Code    18  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x000028f9   Thumb Code    70  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002941   Thumb Code   170  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x000029ed   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002a09   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002a19   Thumb Code    36  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002a3d   Thumb Code    84  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00002a91   Thumb Code   152  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00002b29   Thumb Code   212  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x00002bfd   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002c0d   Thumb Code   206  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002cdd   Thumb Code   406  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x00002e75   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x00002ea5   Thumb Code    40  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x00002ecd   Thumb Code   130  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x00002f51   Thumb Code   136  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x00002fd9   Thumb Code   144  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericSend                        0x00003069   Thumb Code   466  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x0000323d   Thumb Code   342  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00003395   Thumb Code   368  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00003505   Thumb Code   146  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003599   Thumb Code    94  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x000035f9   Thumb Code   122  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x00003675   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x0000369d   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000036a9   Thumb Code   402  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x0000383d   Thumb Code   136  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x000038c5   Thumb Code   166  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x0000396d   Thumb Code   226  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003a51   Thumb Code   372  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00003bc5   Thumb Code   180  timers.o(.text.xTimerCreateTimerTask)
    ADCIntClear                              0x00003c81   Thumb Code    10  adc.o(i.ADCIntClear)
    ADCIntStatus                             0x00003c8b   Thumb Code    52  adc.o(i.ADCIntStatus)
    ADCProcessorTrigger                      0x00003cbf   Thumb Code    26  adc.o(i.ADCProcessorTrigger)
    ADCSequenceConfigure                     0x00003cd9   Thumb Code    96  adc.o(i.ADCSequenceConfigure)
    ADCSequenceDataGet                       0x00003d39   Thumb Code    36  adc.o(i.ADCSequenceDataGet)
    ADCSequenceEnable                        0x00003d5d   Thumb Code    14  adc.o(i.ADCSequenceEnable)
    ADCSequenceStepConfigure                 0x00003d6b   Thumb Code   154  adc.o(i.ADCSequenceStepConfigure)
    GPIODirModeSet                           0x00003e05   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOIntClear                             0x00003e2d   Thumb Code     6  gpio.o(i.GPIOIntClear)
    GPIOIntDisable                           0x00003e33   Thumb Code    14  gpio.o(i.GPIOIntDisable)
    GPIOIntEnable                            0x00003e41   Thumb Code    12  gpio.o(i.GPIOIntEnable)
    GPIOIntRegister                          0x00003e4d   Thumb Code    26  gpio.o(i.GPIOIntRegister)
    GPIOIntStatus                            0x00003e67   Thumb Code    14  gpio.o(i.GPIOIntStatus)
    GPIOIntTypeSet                           0x00003e75   Thumb Code    80  gpio.o(i.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x00003ec5   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x00004035   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinRead                              0x00004079   Thumb Code     6  gpio.o(i.GPIOPinRead)
    GPIOPinTypeADC                           0x0000407f   Thumb Code    28  gpio.o(i.GPIOPinTypeADC)
    GPIOPinTypeGPIOInput                     0x0000409b   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x000040b7   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinTypeTimer                         0x000040d3   Thumb Code    28  gpio.o(i.GPIOPinTypeTimer)
    GPIOPinWrite                             0x000040ef   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    IntEnable                                0x000040f5   Thumb Code    92  interrupt.o(i.IntEnable)
    IntMasterEnable                          0x00004159   Thumb Code    14  interrupt.o(i.IntMasterEnable)
    IntRegister                              0x00004169   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlClockGet                           0x0000419d   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x000042f1   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00004319   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    TimerConfigure                           0x00004345   Thumb Code    88  timer.o(i.TimerConfigure)
    TimerControlEvent                        0x000043a5   Thumb Code    18  timer.o(i.TimerControlEvent)
    TimerDisable                             0x000043b7   Thumb Code    16  timer.o(i.TimerDisable)
    TimerEnable                              0x000043c7   Thumb Code    14  timer.o(i.TimerEnable)
    TimerIntClear                            0x000043d5   Thumb Code     4  timer.o(i.TimerIntClear)
    TimerIntEnable                           0x000043d9   Thumb Code     8  timer.o(i.TimerIntEnable)
    TimerIntStatus                           0x000043e1   Thumb Code    10  timer.o(i.TimerIntStatus)
    TimerLoadSet                             0x000043eb   Thumb Code    18  timer.o(i.TimerLoadSet)
    TimerValueGet                            0x000043fd   Thumb Code    10  timer.o(i.TimerValueGet)
    _is_digit                                0x00004459   Thumb Code    14  __printf_wp.o(i._is_digit)
    $Super$$_fp_init                         0x00004467   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0000447f   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000447f   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00004a2c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004a4c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000670   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200006d0   Data           0  libspace.o(.bss)
    captured                                 0x200006d0   Data           1  drivers.o(.bss.captured)
    distanceBuzzer                           0x20000878   Data           1  safety_tasks.o(.bss.distanceBuzzer)
    distanceQueue                            0x2000087c   Data           4  safety_tasks.o(.bss.distanceQueue)
    doorLocked                               0x20000880   Data           1  safety_tasks.o(.bss.doorLocked)
    doorOpenedBuzzer                         0x20000881   Data           1  safety_tasks.o(.bss.doorOpenedBuzzer)
    driverDoorState                          0x20000884   Data           4  drivers.o(.bss.driverDoorState)
    fallingEdge                              0x20000888   Data           4  drivers.o(.bss.fallingEdge)
    gearState                                0x2000088c   Data           1  drivers.o(.bss.gearState)
    ignitionState                            0x20000890   Data           4  drivers.o(.bss.ignitionState)
    lcdMutex                                 0x20000894   Data           4  safety_tasks.o(.bss.lcdMutex)
    manualLockState                          0x2000089b   Data           1  drivers.o(.bss.manualLockState)
    manualUnlockState                        0x2000089c   Data           1  drivers.o(.bss.manualUnlockState)
    pxCurrentTCB                             0x20000944   Data           4  tasks.o(.bss.pxCurrentTCB)
    risingEdge                               0x20000dbc   Data           4  drivers.o(.bss.risingEdge)
    speedQueue                               0x20000dc0   Data           4  safety_tasks.o(.bss.speedQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000375

  Load Region LR_1 (Base: 0x00000000, Size: 0x0000526c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004c18])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004a4c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          351    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         2157  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         2335    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000003a   Code   RO         2333    !!dczerorl          c_w.l(__dczerorl.o)
    0x000002e2   0x000002e2   0x00000002   PAD
    0x000002e4   0x000002e4   0x0000001c   Code   RO         2337    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000300   0x00000300   0x00000000   Code   RO         2144    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x00000300   0x00000300   0x00000006   Code   RO         2143    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x00000306   0x00000306   0x00000006   Code   RO         2142    .ARM.Collect$$_printf_percent$$00000013  c_w.l(_printf_c.o)
    0x0000030c   0x0000030c   0x00000004   Code   RO         2170    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x00000310   0x00000310   0x00000002   Code   RO         2197    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000312   0x00000312   0x00000004   Code   RO         2203    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2206    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2208    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2211    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2213    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2215    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2218    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2220    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2222    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2224    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2226    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2228    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2230    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2232    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2234    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2236    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2238    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2242    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2244    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2246    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         2248    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x00000316   0x00000316   0x00000002   Code   RO         2249    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x00000318   0x00000318   0x00000002   Code   RO         2269    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000031a   0x0000031a   0x00000000   Code   RO         2284    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000031a   0x0000031a   0x00000000   Code   RO         2286    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000031a   0x0000031a   0x00000000   Code   RO         2289    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000031a   0x0000031a   0x00000000   Code   RO         2292    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000031a   0x0000031a   0x00000000   Code   RO         2294    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000031a   0x0000031a   0x00000000   Code   RO         2297    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000031a   0x0000031a   0x00000002   Code   RO         2298    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000031c   0x0000031c   0x00000000   Code   RO         2161    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000031c   0x0000031c   0x00000000   Code   RO         2174    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000031c   0x0000031c   0x00000006   Code   RO         2186    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000322   0x00000322   0x00000008   Code   RO         2175    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0000032a   0x0000032a   0x00000004   Code   RO         2177    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0000032e   0x0000032e   0x00000000   Code   RO         2179    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0000032e   0x0000032e   0x00000008   Code   RO         2180    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000336   0x00000336   0x00000002   Code   RO         2201    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000338   0x00000338   0x00000000   Code   RO         2251    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000338   0x00000338   0x00000004   Code   RO         2252    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0000033c   0x0000033c   0x00000006   Code   RO         2253    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x00000342   0x00000342   0x00000002   PAD
    0x00000344   0x00000344   0x00000006   Code   RO         1508    .emb_text           driverlib.lib(sysctl.o)
    0x0000034a   0x0000034a   0x00000002   PAD
    0x0000034c   0x0000034c   0x00000026   Code   RO         2098    .emb_text           driverlib.lib(cpu.o)
    0x00000372   0x00000372   0x00000002   PAD
    0x00000374   0x00000374   0x00000114   Code   RO          352  * .text               startup_tm4c123.o
    0x00000488   0x00000488   0x00000028   Code   RO         2112    .text               c_w.l(noretval__2sprintf.o)
    0x000004b0   0x000004b0   0x0000004e   Code   RO         2116    .text               c_w.l(_printf_pad.o)
    0x000004fe   0x000004fe   0x00000052   Code   RO         2118    .text               c_w.l(_printf_str.o)
    0x00000550   0x00000550   0x00000078   Code   RO         2120    .text               c_w.l(_printf_dec.o)
    0x000005c8   0x000005c8   0x0000010e   Code   RO         2130    .text               c_w.l(__printf_wp.o)
    0x000006d6   0x000006d6   0x0000003e   Code   RO         2145    .text               c_w.l(strlen.o)
    0x00000714   0x00000714   0x0000008a   Code   RO         2147    .text               c_w.l(rt_memcpy_v6.o)
    0x0000079e   0x0000079e   0x00000010   Code   RO         2149    .text               c_w.l(aeabi_memset4.o)
    0x000007ae   0x000007ae   0x00000044   Code   RO         2151    .text               c_w.l(rt_memclr.o)
    0x000007f2   0x000007f2   0x0000004e   Code   RO         2153    .text               c_w.l(rt_memclr_w.o)
    0x00000840   0x00000840   0x00000006   Code   RO         2155    .text               c_w.l(heapauxi.o)
    0x00000846   0x00000846   0x000000b2   Code   RO         2162    .text               c_w.l(_printf_intcommon.o)
    0x000008f8   0x000008f8   0x00000030   Code   RO         2164    .text               c_w.l(_printf_char_common.o)
    0x00000928   0x00000928   0x0000000a   Code   RO         2166    .text               c_w.l(_sputc.o)
    0x00000932   0x00000932   0x0000002c   Code   RO         2168    .text               c_w.l(_printf_char.o)
    0x0000095e   0x0000095e   0x00000064   Code   RO         2171    .text               c_w.l(rt_memcpy_w.o)
    0x000009c2   0x000009c2   0x0000004a   Code   RO         2190    .text               c_w.l(sys_stackheap_outer.o)
    0x00000a0c   0x00000a0c   0x00000012   Code   RO         2192    .text               c_w.l(exit.o)
    0x00000a1e   0x00000a1e   0x00000002   PAD
    0x00000a20   0x00000a20   0x00000008   Code   RO         2198    .text               c_w.l(libspace.o)
    0x00000a28   0x00000a28   0x0000000c   Code   RO         2259    .text               c_w.l(sys_exit.o)
    0x00000a34   0x00000a34   0x00000002   Code   RO         2274    .text               c_w.l(use_no_semi.o)
    0x00000a36   0x00000a36   0x00000000   Code   RO         2276    .text               c_w.l(indicate_semi.o)
    0x00000a36   0x00000a36   0x00000002   PAD
    0x00000a38   0x00000a38   0x00000016   Code   RO          142    .text.$Sub$$_fp_init  clib_os.o
    0x00000a4e   0x00000a4e   0x00000002   PAD
    0x00000a50   0x00000a50   0x000000ee   Code   RO           64    .text.GPIOA_Handler  drivers.o
    0x00000b3e   0x00000b3e   0x00000002   PAD
    0x00000b40   0x00000b40   0x00000028   Code   RO           50    .text.LCD_Clear     lcd.o
    0x00000b68   0x00000b68   0x000000b0   Code   RO           46    .text.LCD_Print     lcd.o
    0x00000c18   0x00000c18   0x00000090   Code   RO           44    .text.LCD_SendCommand  lcd.o
    0x00000ca8   0x00000ca8   0x00000018   Code   RO           48    .text.LCD_SetCursor  lcd.o
    0x00000cc0   0x00000cc0   0x00000060   Code   RO          438    .text.PendSV_Handler  port.o
    0x00000d20   0x00000d20   0x00000020   Code   RO          434    .text.SVC_Handler   port.o
    0x00000d40   0x00000d40   0x0000001e   Code   RO          166    .text.SysTick_Handler  cmsis_os2.o
    0x00000d5e   0x00000d5e   0x00000002   PAD
    0x00000d60   0x00000d60   0x00000088   Code   RO          361    .text.SystemInit    system_tm4c123.o
    0x00000de8   0x00000de8   0x00000024   Code   RO          148    .text._mutex_acquire  clib_os.o
    0x00000e0c   0x00000e0c   0x0000004e   Code   RO          152    .text._mutex_free   clib_os.o
    0x00000e5a   0x00000e5a   0x00000002   PAD
    0x00000e5c   0x00000e5c   0x0000007e   Code   RO          146    .text._mutex_initialize  clib_os.o
    0x00000eda   0x00000eda   0x00000002   PAD
    0x00000edc   0x00000edc   0x00000026   Code   RO          150    .text._mutex_release  clib_os.o
    0x00000f02   0x00000f02   0x00000002   PAD
    0x00000f04   0x00000f04   0x00000002   Code   RO          140    .text._platform_post_stackheap_init  clib_os.o
    0x00000f06   0x00000f06   0x00000002   PAD
    0x00000f08   0x00000f08   0x0000009c   Code   RO           14    .text.createSafetyTasks  safety_tasks.o
    0x00000fa4   0x00000fa4   0x0000006a   Code   RO           62    .text.delay_ms      drivers.o
    0x0000100e   0x0000100e   0x00000002   PAD
    0x00001010   0x00001010   0x0000017c   Code   RO           16    .text.doorTask      safety_tasks.o
    0x0000118c   0x0000118c   0x00000072   Code   RO           68    .text.initADC       drivers.o
    0x000011fe   0x000011fe   0x00000002   PAD
    0x00001200   0x00001200   0x00000038   Code   RO          100    .text.initBuzzer    drivers.o
    0x00001238   0x00001238   0x0000002c   Code   RO           96    .text.initDoorLockLed  drivers.o
    0x00001264   0x00001264   0x00000080   Code   RO           42    .text.initLCD       lcd.o
    0x000012e4   0x000012e4   0x00000038   Code   RO           92    .text.initRGB       drivers.o
    0x0000131c   0x0000131c   0x00000070   Code   RO           66    .text.initSwitches  drivers.o
    0x0000138c   0x0000138c   0x0000009e   Code   RO           76    .text.initTimer1    drivers.o
    0x0000142a   0x0000142a   0x00000002   PAD
    0x0000142c   0x0000142c   0x00000066   Code   RO           84    .text.initUltrasonic  drivers.o
    0x00001492   0x00001492   0x00000002   PAD
    0x00001494   0x00001494   0x00000012   Code   RO          114    .text.isDriverDoorOpen  drivers.o
    0x000014a6   0x000014a6   0x00000002   PAD
    0x000014a8   0x000014a8   0x00000014   Code   RO          108    .text.isGearDrive   drivers.o
    0x000014bc   0x000014bc   0x00000014   Code   RO          110    .text.isGearReverse  drivers.o
    0x000014d0   0x000014d0   0x00000012   Code   RO          112    .text.isIgnitionOn  drivers.o
    0x000014e2   0x000014e2   0x00000002   PAD
    0x000014e4   0x000014e4   0x0000000c   Code   RO          120    .text.isManualLockOn  drivers.o
    0x000014f0   0x000014f0   0x0000000c   Code   RO          122    .text.isManualUnlockOn  drivers.o
    0x000014fc   0x000014fc   0x000003bc   Code   RO           20    .text.lcdUpdateTask  safety_tasks.o
    0x000018b8   0x000018b8   0x00000010   Code   RO          116    .text.lockDoors     drivers.o
    0x000018c8   0x000018c8   0x0000002a   Code   RO            2    .text.main          main.o
    0x000018f2   0x000018f2   0x00000002   PAD
    0x000018f4   0x000018f4   0x000000b2   Code   RO          586    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000019a6   0x000019a6   0x00000002   PAD
    0x000019a8   0x000019a8   0x00000132   Code   RO          576    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001ada   0x00001ada   0x00000002   PAD
    0x00001adc   0x00001adc   0x0000006a   Code   RO          616    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001b46   0x00001b46   0x00000002   PAD
    0x00001b48   0x00001b48   0x0000002a   Code   RO          700    .text.prvIdleTask   tasks.o
    0x00001b72   0x00001b72   0x00000002   PAD
    0x00001b74   0x00001b74   0x0000011a   Code   RO          698    .text.prvInitialiseNewTask  tasks.o
    0x00001c8e   0x00001c8e   0x00000002   PAD
    0x00001c90   0x00001c90   0x00000028   Code   RO          444    .text.prvPortStartFirstTask  port.o
    0x00001cb8   0x00001cb8   0x000000b8   Code   RO          782    .text.prvSampleTimeNow  timers.o
    0x00001d70   0x00001d70   0x0000003e   Code   RO          432    .text.prvTaskExitError  port.o
    0x00001dae   0x00001dae   0x00000002   PAD
    0x00001db0   0x00001db0   0x0000025e   Code   RO          738    .text.prvTimerTask  timers.o
    0x0000200e   0x0000200e   0x00000002   PAD
    0x00002010   0x00002010   0x00000074   Code   RO          528    .text.prvUnlockQueue  queue.o
    0x00002084   0x00002084   0x000001ac   Code   RO          467    .text.pvPortMalloc  heap_4.o
    0x00002230   0x00002230   0x00000018   Code   RO          676    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002248   0x00002248   0x00000028   Code   RO          430    .text.pxPortInitialiseStack  port.o
    0x00002270   0x00002270   0x00000056   Code   RO           70    .text.readSpeedADC  drivers.o
    0x000022c6   0x000022c6   0x00000002   PAD
    0x000022c8   0x000022c8   0x000000ea   Code   RO           18    .text.rearAssistTask  safety_tasks.o
    0x000023b2   0x000023b2   0x00000002   PAD
    0x000023b4   0x000023b4   0x000000e6   Code   RO          106    .text.setBuzzerFrequency  drivers.o
    0x0000249a   0x0000249a   0x00000002   PAD
    0x0000249c   0x0000249c   0x00000018   Code   RO           98    .text.setDoorLockLed  drivers.o
    0x000024b4   0x000024b4   0x00000010   Code   RO          104    .text.setOffBuzzer  drivers.o
    0x000024c4   0x000024c4   0x00000010   Code   RO          102    .text.setOnBuzzer   drivers.o
    0x000024d4   0x000024d4   0x00000026   Code   RO           94    .text.setRGBColor   drivers.o
    0x000024fa   0x000024fa   0x00000002   PAD
    0x000024fc   0x000024fc   0x0000004e   Code   RO           86    .text.ultrasonic_edge_processor  drivers.o
    0x0000254a   0x0000254a   0x00000002   PAD
    0x0000254c   0x0000254c   0x000000c4   Code   RO           90    .text.ultrasonic_get_distance  drivers.o
    0x00002610   0x00002610   0x00000066   Code   RO           88    .text.ultrasonic_trigger  drivers.o
    0x00002676   0x00002676   0x00000002   PAD
    0x00002678   0x00002678   0x00000010   Code   RO          118    .text.unlockDoors   drivers.o
    0x00002688   0x00002688   0x00000022   Code   RO          420    .text.uxListRemove  list.o
    0x000026aa   0x000026aa   0x00000002   PAD
    0x000026ac   0x000026ac   0x0000001a   Code   RO          694    .text.vApplicationGetTimerTaskMemory  tasks.o
    0x000026c6   0x000026c6   0x00000002   PAD
    0x000026c8   0x000026c8   0x00000004   Code   RO          312    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x000026cc   0x000026cc   0x00000016   Code   RO          412    .text.vListInitialise  list.o
    0x000026e2   0x000026e2   0x00000002   PAD
    0x000026e4   0x000026e4   0x00000006   Code   RO          414    .text.vListInitialiseItem  list.o
    0x000026ea   0x000026ea   0x00000002   PAD
    0x000026ec   0x000026ec   0x00000060   Code   RO          418    .text.vListInsert   list.o
    0x0000274c   0x0000274c   0x00000014   Code   RO          442    .text.vPortEnableVFP  port.o
    0x00002760   0x00002760   0x00000036   Code   RO          448    .text.vPortEnterCritical  port.o
    0x00002796   0x00002796   0x00000002   PAD
    0x00002798   0x00002798   0x00000020   Code   RO          450    .text.vPortExitCritical  port.o
    0x000027b8   0x000027b8   0x000000f8   Code   RO          469    .text.vPortFree     heap_4.o
    0x000028b0   0x000028b0   0x00000034   Code   RO          440    .text.vPortSetupTimerInterrupt  port.o
    0x000028e4   0x000028e4   0x00000012   Code   RO          548    .text.vQueueDelete  queue.o
    0x000028f6   0x000028f6   0x00000002   PAD
    0x000028f8   0x000028f8   0x00000046   Code   RO          564    .text.vQueueWaitForMessageRestricted  queue.o
    0x0000293e   0x0000293e   0x00000002   PAD
    0x00002940   0x00002940   0x000000aa   Code   RO          590    .text.vTaskDelay    tasks.o
    0x000029ea   0x000029ea   0x00000002   PAD
    0x000029ec   0x000029ec   0x0000001a   Code   RO          648    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002a06   0x00002a06   0x00000002   PAD
    0x00002a08   0x00002a08   0x0000000e   Code   RO          652    .text.vTaskMissedYield  tasks.o
    0x00002a16   0x00002a16   0x00000002   PAD
    0x00002a18   0x00002a18   0x00000024   Code   RO          636    .text.vTaskPlaceOnEventList  tasks.o
    0x00002a3c   0x00002a3c   0x00000054   Code   RO          640    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002a90   0x00002a90   0x00000098   Code   RO          672    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00002b28   0x00002b28   0x000000d4   Code   RO          612    .text.vTaskStartScheduler  tasks.o
    0x00002bfc   0x00002bfc   0x00000010   Code   RO          584    .text.vTaskSuspendAll  tasks.o
    0x00002c0c   0x00002c0c   0x000000ce   Code   RO          606    .text.vTaskSwitchContext  tasks.o
    0x00002cda   0x00002cda   0x00000002   PAD
    0x00002cdc   0x00002cdc   0x00000196   Code   RO          436    .text.xPortStartScheduler  port.o
    0x00002e72   0x00002e72   0x00000002   PAD
    0x00002e74   0x00002e74   0x0000002e   Code   RO          452    .text.xPortSysTickHandler  port.o
    0x00002ea2   0x00002ea2   0x00000002   PAD
    0x00002ea4   0x00002ea4   0x00000028   Code   RO          508    .text.xQueueCreateMutex  queue.o
    0x00002ecc   0x00002ecc   0x00000082   Code   RO          510    .text.xQueueCreateMutexStatic  queue.o
    0x00002f4e   0x00002f4e   0x00000002   PAD
    0x00002f50   0x00002f50   0x00000088   Code   RO          506    .text.xQueueGenericCreate  queue.o
    0x00002fd8   0x00002fd8   0x00000090   Code   RO          502    .text.xQueueGenericCreateStatic  queue.o
    0x00003068   0x00003068   0x000001d2   Code   RO          518    .text.xQueueGenericSend  queue.o
    0x0000323a   0x0000323a   0x00000002   PAD
    0x0000323c   0x0000323c   0x00000156   Code   RO          534    .text.xQueueReceive  queue.o
    0x00003392   0x00003392   0x00000002   PAD
    0x00003394   0x00003394   0x00000170   Code   RO          522    .text.xQueueSemaphoreTake  queue.o
    0x00003504   0x00003504   0x00000092   Code   RO          650    .text.xTaskCheckForTimeOut  tasks.o
    0x00003596   0x00003596   0x00000002   PAD
    0x00003598   0x00003598   0x0000005e   Code   RO          578    .text.xTaskCreate   tasks.o
    0x000035f6   0x000035f6   0x00000002   PAD
    0x000035f8   0x000035f8   0x0000007a   Code   RO          574    .text.xTaskCreateStatic  tasks.o
    0x00003672   0x00003672   0x00000002   PAD
    0x00003674   0x00003674   0x00000026   Code   RO          666    .text.xTaskGetSchedulerState  tasks.o
    0x0000369a   0x0000369a   0x00000002   PAD
    0x0000369c   0x0000369c   0x0000000c   Code   RO          620    .text.xTaskGetTickCount  tasks.o
    0x000036a8   0x000036a8   0x00000192   Code   RO          618    .text.xTaskIncrementTick  tasks.o
    0x0000383a   0x0000383a   0x00000002   PAD
    0x0000383c   0x0000383c   0x00000088   Code   RO          670    .text.xTaskPriorityDisinherit  tasks.o
    0x000038c4   0x000038c4   0x000000a6   Code   RO          668    .text.xTaskPriorityInherit  tasks.o
    0x0000396a   0x0000396a   0x00000002   PAD
    0x0000396c   0x0000396c   0x000000e2   Code   RO          642    .text.xTaskRemoveFromEventList  tasks.o
    0x00003a4e   0x00003a4e   0x00000002   PAD
    0x00003a50   0x00003a50   0x00000174   Code   RO          588    .text.xTaskResumeAll  tasks.o
    0x00003bc4   0x00003bc4   0x000000bc   Code   RO          736    .text.xTimerCreateTimerTask  timers.o
    0x00003c80   0x00003c80   0x0000000a   Code   RO          811    i.ADCIntClear       driverlib.lib(adc.o)
    0x00003c8a   0x00003c8a   0x00000034   Code   RO          818    i.ADCIntStatus      driverlib.lib(adc.o)
    0x00003cbe   0x00003cbe   0x0000001a   Code   RO          823    i.ADCProcessorTrigger  driverlib.lib(adc.o)
    0x00003cd8   0x00003cd8   0x00000060   Code   RO          826    i.ADCSequenceConfigure  driverlib.lib(adc.o)
    0x00003d38   0x00003d38   0x00000024   Code   RO          829    i.ADCSequenceDataGet  driverlib.lib(adc.o)
    0x00003d5c   0x00003d5c   0x0000000e   Code   RO          831    i.ADCSequenceEnable  driverlib.lib(adc.o)
    0x00003d6a   0x00003d6a   0x0000009a   Code   RO          834    i.ADCSequenceStepConfigure  driverlib.lib(adc.o)
    0x00003e04   0x00003e04   0x00000028   Code   RO         1084    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00003e2c   0x00003e2c   0x00000006   Code   RO         1085    i.GPIOIntClear      driverlib.lib(gpio.o)
    0x00003e32   0x00003e32   0x0000000e   Code   RO         1086    i.GPIOIntDisable    driverlib.lib(gpio.o)
    0x00003e40   0x00003e40   0x0000000c   Code   RO         1087    i.GPIOIntEnable     driverlib.lib(gpio.o)
    0x00003e4c   0x00003e4c   0x0000001a   Code   RO         1088    i.GPIOIntRegister   driverlib.lib(gpio.o)
    0x00003e66   0x00003e66   0x0000000e   Code   RO         1090    i.GPIOIntStatus     driverlib.lib(gpio.o)
    0x00003e74   0x00003e74   0x00000050   Code   RO         1092    i.GPIOIntTypeSet    driverlib.lib(gpio.o)
    0x00003ec4   0x00003ec4   0x00000170   Code   RO         1096    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00004034   0x00004034   0x00000044   Code   RO         1097    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x00004078   0x00004078   0x00000006   Code   RO         1098    i.GPIOPinRead       driverlib.lib(gpio.o)
    0x0000407e   0x0000407e   0x0000001c   Code   RO         1099    i.GPIOPinTypeADC    driverlib.lib(gpio.o)
    0x0000409a   0x0000409a   0x0000001c   Code   RO         1107    i.GPIOPinTypeGPIOInput  driverlib.lib(gpio.o)
    0x000040b6   0x000040b6   0x0000001c   Code   RO         1108    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x000040d2   0x000040d2   0x0000001c   Code   RO         1118    i.GPIOPinTypeTimer  driverlib.lib(gpio.o)
    0x000040ee   0x000040ee   0x00000006   Code   RO         1126    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x000040f4   0x000040f4   0x00000064   Code   RO         1393    i.IntEnable         driverlib.lib(interrupt.o)
    0x00004158   0x00004158   0x0000000e   Code   RO         1396    i.IntMasterEnable   driverlib.lib(interrupt.o)
    0x00004166   0x00004166   0x00000002   PAD
    0x00004168   0x00004168   0x00000034   Code   RO         1405    i.IntRegister       driverlib.lib(interrupt.o)
    0x0000419c   0x0000419c   0x00000154   Code   RO         1511    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x000042f0   0x000042f0   0x00000028   Code   RO         1542    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00004318   0x00004318   0x0000002c   Code   RO         1546    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x00004344   0x00004344   0x00000060   Code   RO         1860    i.TimerConfigure    driverlib.lib(timer.o)
    0x000043a4   0x000043a4   0x00000012   Code   RO         1861    i.TimerControlEvent  driverlib.lib(timer.o)
    0x000043b6   0x000043b6   0x00000010   Code   RO         1868    i.TimerDisable      driverlib.lib(timer.o)
    0x000043c6   0x000043c6   0x0000000e   Code   RO         1869    i.TimerEnable       driverlib.lib(timer.o)
    0x000043d4   0x000043d4   0x00000004   Code   RO         1870    i.TimerIntClear     driverlib.lib(timer.o)
    0x000043d8   0x000043d8   0x00000008   Code   RO         1872    i.TimerIntEnable    driverlib.lib(timer.o)
    0x000043e0   0x000043e0   0x0000000a   Code   RO         1874    i.TimerIntStatus    driverlib.lib(timer.o)
    0x000043ea   0x000043ea   0x00000012   Code   RO         1878    i.TimerLoadSet      driverlib.lib(timer.o)
    0x000043fc   0x000043fc   0x0000000a   Code   RO         1892    i.TimerValueGet     driverlib.lib(timer.o)
    0x00004406   0x00004406   0x00000002   PAD
    0x00004408   0x00004408   0x00000050   Code   RO         1128    i._GPIOIntNumberGet  driverlib.lib(gpio.o)
    0x00004458   0x00004458   0x0000000e   Code   RO         2132    i._is_digit         c_w.l(__printf_wp.o)
    0x00004466   0x00004466   0x0000001a   Code   RO         2159    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00004480   0x00004480   0x00000228   Data   RO         1129    .constdata          driverlib.lib(gpio.o)
    0x000046a8   0x000046a8   0x0000010c   Data   RO         1409    .constdata          driverlib.lib(interrupt.o)
    0x000047b4   0x000047b4   0x00000254   Data   RO         1564    .constdata          driverlib.lib(sysctl.o)
    0x00004a08   0x00004a08   0x0000001d   Data   RO           33    .rodata.str1.1      safety_tasks.o
    0x00004a25   0x00004a25   0x00000003   PAD
    0x00004a28   0x00004a28   0x00000004   Data   RO          719    .rodata.uxTopUsedPriority  tasks.o
    0x00004a2c   0x00004a2c   0x00000020   Data   RO         2332    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00004c00, Size: 0x0000066c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW          363    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000001   Data   RW           30    .data.lcdUpdateTask.lastGear  safety_tasks.o
    0x20000005   COMPRESSED   0x00000003   PAD
    0x20000008   COMPRESSED   0x00000004   Data   RW          458    .data.uxCriticalNesting  port.o
    0x2000000c   COMPRESSED   0x000003f4   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW         1410    vtable              driverlib.lib(interrupt.o)


    Execution Region ER_ZI (Exec base: 0x20000670, Load base: 0x00004c18, Size: 0x00002ef0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000670        -       0x00000060   Zero   RW         2199    .bss                c_w.l(libspace.o)
    0x200006d0        -       0x00000001   Zero   RW          126    .bss.captured       drivers.o
    0x200006d1   0x00004c18   0x00000003   PAD
    0x200006d4        -       0x00000190   Zero   RW          157    .bss.clib_mutex_cb  clib_os.o
    0x20000864        -       0x00000014   Zero   RW          156    .bss.clib_mutex_id  clib_os.o
    0x20000878        -       0x00000001   Zero   RW           24    .bss.distanceBuzzer  safety_tasks.o
    0x20000879   0x00004c18   0x00000003   PAD
    0x2000087c        -       0x00000004   Zero   RW           27    .bss.distanceQueue  safety_tasks.o
    0x20000880        -       0x00000001   Zero   RW           22    .bss.doorLocked     safety_tasks.o
    0x20000881        -       0x00000001   Zero   RW           23    .bss.doorOpenedBuzzer  safety_tasks.o
    0x20000882        -       0x00000001   Zero   RW           28    .bss.doorTask.wasHigh  safety_tasks.o
    0x20000883   0x00004c18   0x00000001   PAD
    0x20000884        -       0x00000004   Zero   RW          128    .bss.driverDoorState  drivers.o
    0x20000888        -       0x00000004   Zero   RW          125    .bss.fallingEdge    drivers.o
    0x2000088c        -       0x00000001   Zero   RW          129    .bss.gearState      drivers.o
    0x2000088d   0x00004c18   0x00000003   PAD
    0x20000890        -       0x00000004   Zero   RW          127    .bss.ignitionState  drivers.o
    0x20000894        -       0x00000004   Zero   RW           25    .bss.lcdMutex       safety_tasks.o
    0x20000898        -       0x00000001   Zero   RW           32    .bss.lcdUpdateTask.doorWasOpen  safety_tasks.o
    0x20000899        -       0x00000001   Zero   RW           31    .bss.lcdUpdateTask.lastLock  safety_tasks.o
    0x2000089a        -       0x00000001   Zero   RW           29    .bss.lcdUpdateTask.wasOn  safety_tasks.o
    0x2000089b        -       0x00000001   Zero   RW          130    .bss.manualLockState  drivers.o
    0x2000089c        -       0x00000001   Zero   RW          131    .bss.manualUnlockState  drivers.o
    0x2000089d        -       0x00000050   Zero   RW          792    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x200008ed   0x00004c18   0x00000003   PAD
    0x200008f0        -       0x00000050   Zero   RW          791    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000940        -       0x00000004   Zero   RW          788    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000944        -       0x00000004   Zero   RW          702    .bss.pxCurrentTCB   tasks.o
    0x20000948        -       0x00000004   Zero   RW          786    .bss.pxCurrentTimerList  timers.o
    0x2000094c        -       0x00000004   Zero   RW          710    .bss.pxDelayedTaskList  tasks.o
    0x20000950        -       0x00000004   Zero   RW          485    .bss.pxEnd          heap_4.o
    0x20000954        -       0x00000004   Zero   RW          711    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000958        -       0x00000004   Zero   RW          787    .bss.pxOverflowTimerList  timers.o
    0x2000095c        -       0x00000460   Zero   RW          714    .bss.pxReadyTasksLists  tasks.o
    0x20000dbc        -       0x00000004   Zero   RW          124    .bss.risingEdge     drivers.o
    0x20000dc0        -       0x00000004   Zero   RW           26    .bss.speedQueue     safety_tasks.o
    0x20000dc4        -       0x00002000   Zero   RW          488    .bss.ucHeap         heap_4.o
    0x20002dc4        -       0x00000001   Zero   RW          456    .bss.ucMaxSysCallPriority  port.o
    0x20002dc5   0x00004c18   0x00000003   PAD
    0x20002dc8        -       0x00000004   Zero   RW          457    .bss.ulMaxPRIGROUPValue  port.o
    0x20002dcc        -       0x00000004   Zero   RW          707    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002dd0        -       0x00000004   Zero   RW          706    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002dd4        -       0x00000004   Zero   RW          708    .bss.uxSchedulerSuspended  tasks.o
    0x20002dd8        -       0x00000004   Zero   RW          703    .bss.uxTaskNumber   tasks.o
    0x20002ddc        -       0x00000004   Zero   RW          715    .bss.uxTopReadyPriority  tasks.o
    0x20002de0        -       0x00000200   Zero   RW          723    .bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack  tasks.o
    0x20002fe0        -       0x0000005c   Zero   RW          722    .bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB  tasks.o
    0x2000303c        -       0x00000200   Zero   RW          725    .bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack  tasks.o
    0x2000323c        -       0x0000005c   Zero   RW          724    .bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB  tasks.o
    0x20003298        -       0x00000014   Zero   RW          789    .bss.xActiveTimerList1  timers.o
    0x200032ac        -       0x00000014   Zero   RW          790    .bss.xActiveTimerList2  timers.o
    0x200032c0        -       0x00000014   Zero   RW          726    .bss.xDelayedTaskList1  tasks.o
    0x200032d4        -       0x00000014   Zero   RW          727    .bss.xDelayedTaskList2  tasks.o
    0x200032e8        -       0x00000004   Zero   RW          486    .bss.xFreeBytesRemaining  heap_4.o
    0x200032ec        -       0x00000004   Zero   RW          718    .bss.xIdleTaskHandles.0  tasks.o
    0x200032f0        -       0x00000004   Zero   RW          489    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x200032f4        -       0x00000004   Zero   RW          717    .bss.xNextTaskUnblockTime  tasks.o
    0x200032f8        -       0x00000004   Zero   RW          721    .bss.xNumOfOverflows  tasks.o
    0x200032fc        -       0x00000004   Zero   RW          490    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20003300        -       0x00000004   Zero   RW          491    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20003304        -       0x00000004   Zero   RW          720    .bss.xPendedTicks   tasks.o
    0x20003308        -       0x00000014   Zero   RW          712    .bss.xPendingReadyList  tasks.o
    0x2000331c        -       0x00000004   Zero   RW          704    .bss.xSchedulerRunning  tasks.o
    0x20003320        -       0x00000008   Zero   RW          487    .bss.xStart         heap_4.o
    0x20003328        -       0x00000014   Zero   RW          713    .bss.xSuspendedTaskList  tasks.o
    0x2000333c        -       0x00000014   Zero   RW          705    .bss.xTasksWaitingTermination  tasks.o
    0x20003350        -       0x00000004   Zero   RW          709    .bss.xTickCount     tasks.o
    0x20003354        -       0x00000004   Zero   RW          784    .bss.xTimerQueue    timers.o
    0x20003358        -       0x00000004   Zero   RW          785    .bss.xTimerTaskHandle  timers.o
    0x2000335c        -       0x00000004   Zero   RW          716    .bss.xYieldPendings  tasks.o
    0x20003360        -       0x00000000   Zero   RW          350    HEAP                startup_tm4c123.o
    0x20003360        -       0x00000200   Zero   RW          349    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       302          0          0          0        420       4946   clib_os.o
        34          0          0          0          0      56007   cmsis_os2.o
      1904          8          0          0         20       6765   drivers.o
       676          0          0          0       8220       5753   heap_4.o
       512          0          0          0          0       2176   lcd.o
       158          0          0          0          0       2456   list.o
        42          0          0          0          0        683   main.o
       880         16          0          4          5       4195   port.o
      1830          0          0          0          0      22265   queue.o
      1726        112         29          1         19       4304   safety_tasks.o
       276         24        620          0        512       5500   startup_tm4c123.o
       136          0          0          4          0       6686   system_tm4c123.o
      3594          0          4          0       2488      44289   tasks.o
       978         18          0          0        220      16443   timers.o

    ----------------------------------------------------------------------
     13148        178        688       1024      11920     182468   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       100          0          3       1015         16          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
       284          0          0          0          0        156   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
         6          0          0          0          0          0   _printf_c.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
       178          0          0          0          0         88   _printf_intcommon.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        82          0          0          0          0         80   _printf_str.o
        10          0          0          0          0         68   _sputc.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        40          6          0          0          0         84   noretval__2sprintf.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       388          0          0          0          0       9638   adc.o
        38          0          0          0          0        572   cpu.o
       832         40        552          0          0       9886   gpio.o
       166         16        268        620          0       2668   interrupt.o
       430         44        596          0          0       4054   sysctl.o
       194          8          0          0          0       4635   timer.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      3768        152       1416        620         96      33473   Library Totals
        16          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1678         44          0          0         96       1904   c_w.l
      2048        108       1416        620          0      31453   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      3768        152       1416        620         96      33473   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     16916        330       2104       1644      12016     211213   Grand Totals
     16916        330       2104         24      12016     211213   ELF Image Totals (compressed)
     16916        330       2104         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                19020 (  18.57kB)
    Total RW  Size (RW Data + ZI Data)             13660 (  13.34kB)
    Total ROM Size (Code + RO Data + RW Data)      19044 (  18.60kB)

==============================================================================

